{"version":3,"sources":["meteor://ðŸ’»app/packages/peerlibrary:reactive-field/lib.js"],"names":["module","export","ReactiveField","constructor","initialValue","equalsFunc","storePrevious","_","isFunction","arguments","length","previousValue","undefined","value","ReactiveVar","getterSetter","newValue","Tracker","nonreactive","oldValue","get","_isEqual","set","Object","setPrototypeOf","prototype","__proto__","toString","apply","obj","args","call","arg","previous","Error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,eAAa,EAAC,MAAIA;AAAnB,CAAd;;AAAO,MAAMA,aAAN,CAAoB;AACzBC,aAAW,CAACC,YAAD,EAAeC,UAAf,EAA2BC,aAA3B,EAA0C;AACnD;AACA,QAAI,CAACC,CAAC,CAACC,UAAF,CAAaH,UAAb,CAAD,IAA8BI,SAAS,CAACC,MAAV,KAAqB,CAAvD,EAA2D;AACzDJ,mBAAa,GAAGD,UAAhB;AACAA,gBAAU,GAAG,IAAb;AACD;;AACD,QAAIM,aAAa,GAAGC,SAApB;AACA,UAAMC,KAAK,GAAG,IAAIC,WAAJ,CAAgBV,YAAhB,EAA8BC,UAA9B,CAAd;;AAEA,UAAMU,YAAY,GAAG,UAAUC,QAAV,EAAoB;AACvC,UAAIP,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,YAAIJ,aAAJ,EAAmB;AACjBW,iBAAO,CAACC,WAAR,CAAoB,MAAM;AACxB,kBAAMC,QAAQ,GAAGN,KAAK,CAACO,GAAN,EAAjB,CADwB,CAExB;;AACA,gBAAI,CAAC,CAACf,UAAU,IAAIS,WAAW,CAACO,QAA3B,EAAqCF,QAArC,EAA+CH,QAA/C,CAAL,EAA+D;AAC7DL,2BAAa,GAAGQ,QAAhB;AACD;AACF,WAND;AAOD;;AAEDN,aAAK,CAACS,GAAN,CAAUN,QAAV,EAXwB,CAYxB;;AACA,eAAOC,OAAO,CAACC,WAAR,CAAoB,MAAM;AAC/B,iBAAOL,KAAK,CAACO,GAAN,EAAP;AACD,SAFM,CAAP;AAGD;;AAED,aAAOP,KAAK,CAACO,GAAN,EAAP;AACD,KApBD,CATmD,CA+BnD;;;AACA,QAAIG,MAAM,CAACC,cAAX,EAA2B;AACzBD,YAAM,CAACC,cAAP,CAAsBT,YAAtB,EAAoC,KAAKZ,WAAL,CAAiBsB,SAArD;AACD,KAFD,MAGK;AACHV,kBAAY,CAACW,SAAb,GAAyB,KAAKvB,WAAL,CAAiBsB,SAA1C;AACD;;AAEDV,gBAAY,CAACY,QAAb,GAAwB,YAAY;AAClC,aAAQ,iBAAgB,MAAO,GAA/B;AACD,KAFD;;AAIAZ,gBAAY,CAACa,KAAb,GAAqB,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACxC,UAAIA,IAAI,IAAIA,IAAI,CAACpB,MAAL,GAAc,CAA1B,EAA6B;AAC3B,eAAOK,YAAY,CAACe,IAAI,CAAC,CAAD,CAAL,CAAnB;AACD,OAFD,MAGK;AACH,eAAOf,YAAY,EAAnB;AACD;AACF,KAPD;;AASAA,gBAAY,CAACgB,IAAb,GAAoB,UAAUF,GAAV,EAAeG,GAAf,EAAoB;AACtC,UAAIvB,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,eAAOK,YAAY,CAACiB,GAAD,CAAnB;AACD,OAFD,MAGK;AACH,eAAOjB,YAAY,EAAnB;AACD;AACF,KAPD;;AASAA,gBAAY,CAACkB,QAAb,GAAwB,YAAW;AACjC,UAAI,CAAC3B,aAAL,EAAoB;AAClB,cAAM,IAAI4B,KAAJ,CAAU,wCAAV,CAAN;AACD;;AACD,aAAOvB,aAAP;AACD,KALD;;AAOA,WAAOI,YAAP;AACD;;AAtEwB,C","file":"/packages/peerlibrary_reactive-field.js","sourcesContent":["export class ReactiveField {\n  constructor(initialValue, equalsFunc, storePrevious) {\n    // To allow not passing equalsFunc, but just storePrevious.\n    if (!_.isFunction(equalsFunc) && (arguments.length === 2)) {\n      storePrevious = equalsFunc;\n      equalsFunc = null;\n    }\n    let previousValue = undefined;\n    const value = new ReactiveVar(initialValue, equalsFunc);\n\n    const getterSetter = function (newValue) {\n      if (arguments.length > 0) {\n        if (storePrevious) {\n          Tracker.nonreactive(() => {\n            const oldValue = value.get();\n            // Only if the new value is different than currently stored value, we update the previous value.\n            if (!(equalsFunc || ReactiveVar._isEqual)(oldValue, newValue)) {\n              previousValue = oldValue;\n            }\n          });\n        }\n\n        value.set(newValue);\n        // We return the value as well, but we do not want to register a dependency.\n        return Tracker.nonreactive(() => {\n          return value.get();\n        });\n      }\n\n      return value.get();\n    };\n\n    // We mingle the prototype so that getterSetter instanceof ReactiveField is true.\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(getterSetter, this.constructor.prototype);\n    }\n    else {\n      getterSetter.__proto__ = this.constructor.prototype;\n    }\n\n    getterSetter.toString = function () {\n      return `ReactiveField{${this()}}`;\n    };\n\n    getterSetter.apply = function (obj, args) {\n      if (args && args.length > 0) {\n        return getterSetter(args[0]);\n      }\n      else {\n        return getterSetter();\n      }\n    };\n\n    getterSetter.call = function (obj, arg) {\n      if (arguments.length > 1) {\n        return getterSetter(arg);\n      }\n      else {\n        return getterSetter();\n      }\n    };\n\n    getterSetter.previous = function() {\n      if (!storePrevious) {\n        throw new Error(\"Storing previous value is not enabled.\");\n      }\n      return previousValue;\n    };\n\n    return getterSetter;\n  }\n}\n"]}