{"version":3,"sources":["meteor://ðŸ’»app/packages/easysearch:core/lib/core/index.js","meteor://ðŸ’»app/packages/easysearch:core/lib/core/engine.js","meteor://ðŸ’»app/packages/easysearch:core/lib/core/reactive-engine.js","meteor://ðŸ’»app/packages/easysearch:core/lib/core/cursor.js","meteor://ðŸ’»app/packages/easysearch:core/lib/core/search-collection.js","meteor://ðŸ’»app/packages/easysearch:core/lib/engines/mongo-db.js","meteor://ðŸ’»app/packages/easysearch:core/lib/engines/minimongo.js","meteor://ðŸ’»app/packages/easysearch:core/lib/engines/mongo-text-index.js","meteor://ðŸ’»app/packages/easysearch:core/lib/globals.js","meteor://ðŸ’»app/packages/easysearch:core/lib/main.js"],"names":["Mongo","module","link","v","Engine","default","Index","constructor","config","check","Object","fields","String","ignoreCollectionCheck","collection","Collection","engine","Meteor","Error","name","_name","toLowerCase","_","extend","defaultConfiguration","defaultSearchOptions","defaults","limit","skip","props","onIndexCreate","permission","countUpdateIntervalMs","search","searchDefinition","options","checkSearchParam","Match","Optional","Number","userId","OneOf","_getSearchOptions","index","isServer","exportDefault","isFunction","callConfigMethod","methodName","args","func","apply","indexConfig","allowedFields","SearchCollection","ReactiveEngine","getSearchCursor","transform","doc","beforePublish","event","searchCollection","mongoCollection","_collection","transformSearchDefinition","isString","obj","each","field","indexOptions","isObject","val","indexOf","isClient","find","Cursor","mongoCursor","count","isReady","publishHandle","fetch","Function","Boolean","_mongoCursor","_count","_isReady","_publishHandle","stop","emptyCursor","observe","indexConfiguration","_indexConfiguration","_engine","_setUpPublication","subscribe","_getCount","_getMongoCursor","isNumber","countDoc","findOne","JSON","stringify","clientSort","__searchDefinition","__searchOptions","__sortPosition","sort","generateId","_id","addCustomFields","data","forEach","key","collectionScope","collectionName","publish","definitionString","optionsString","publicationScope","cursor","added","intervalID","setInterval","changed","onStop","clearInterval","resultsHandle","observedDocs","updateDocWithCustomFields","sortPosition","originalId","searchOptions","addedAt","atIndex","before","map","d","includes","docIndex","length","changedAt","oldDoc","movedTo","fromIndex","toIndex","beforeDoc","removedAt","removed","filter","ready","MongoDBEngine","defaultMongoConfiguration","engineScope","aggregation","selector","searchObject","searchString","fieldSelector","push","selectorPerField","replace","getFindOptions","disableOplog","pollingIntervalMs","pollingThrottleMs","findOptions","MinimongoEngine","prototype","MongoTextIndexEngine","mongoConfiguration","trim","$text","$search","textIndexesConfig","weights","_ensureIndex","EasySearch","MongoDB","Minimongo","MongoTextIndex","export"],"mappings":"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","file":"/packages/easysearch_core.js","sourcesContent":["import { Mongo } from 'meteor/mongo'\nimport Engine from './engine'\n\n/**\n * An Index represents the main entry point for searching with EasySearch. It relies on\n * the given engine to have the search functionality and defines the data that should be searchable.\n *\n * @type {Index}\n */\nclass Index {\n  /**\n   * Constructor\n   *\n   * @param {Object} config Configuration\n   *\n   * @constructor\n   */\n  constructor(config) {\n    check(config, Object);\n    check(config.fields, [String]);\n    if(!config.ignoreCollectionCheck) check(config.collection, Mongo.Collection);\n\n    if (!(config.engine instanceof Engine)) {\n      throw new Meteor.Error('invalid-engine', 'engine needs to be instanceof Engine');\n    }\n\n    if (!config.name)\n      config.name = (config.collection._name || '').toLowerCase();\n\n    this.config = _.extend(Index.defaultConfiguration, config);\n    this.defaultSearchOptions = _.defaults(\n      {},\n      this.config.defaultSearchOptions,\n      { limit: 10, skip: 0, props: {} },\n    );\n\n    // Engine specific code on index creation\n    config.engine.onIndexCreate(this.config);\n  }\n\n  /**\n   * Default configuration for an index.\n   *\n   * @returns {Object}\n   */\n  static get defaultConfiguration() {\n    return {\n      permission: () => true,\n      defaultSearchOptions: {},\n      countUpdateIntervalMs: 2000,\n    };\n  }\n\n  /**\n   * Search the index.\n   *\n   * @param {Object|String} searchDefinition Search definition\n   * @param {Object}        options          Options\n   *\n   * @returns {Cursor}\n   */\n  search(searchDefinition, options = {}) {\n    this.config.engine.checkSearchParam(searchDefinition, this.config);\n\n    check(options, {\n      limit: Match.Optional(Number),\n      skip: Match.Optional(Number),\n      props: Match.Optional(Object),\n      userId: Match.Optional(Match.OneOf(String, null)),\n    });\n\n    options = {\n      search: this._getSearchOptions(options),\n      index: this.config,\n    };\n\n    if (!this.config.permission(options.search)) {\n      throw new Meteor.Error('not-allowed', \"Not allowed to search this index!\");\n    }\n\n    return this.config.engine.search(searchDefinition, options);\n  }\n\n  /**\n   * Returns the search options based on the given options.\n   *\n   * @param {Object} options Options to use\n   *\n   * @returns {Object}\n   */\n  _getSearchOptions(options) {\n    if (!Meteor.isServer) {\n      delete options.userId;\n    }\n\n    if (typeof options.userId === \"undefined\" && Meteor.userId) {\n      options.userId = Meteor.userId();\n    }\n\n    return _.defaults(options, this.defaultSearchOptions);\n  }\n}\n\nexport default Index;\n","/**\n * An Engine is the technology used for searching with EasySearch, with\n * customizable configuration to how it interacts with the data from the Index.\n *\n * @type {Engine}\n */\nclass Engine {\n  /**\n   * Constructor\n   *\n   * @param {Object} config configuration\n   *\n   * @constructor\n   */\n  constructor(config = {}) {\n    if (this.constructor === Engine) {\n      throw new Error('Cannot initialize instance of Engine');\n    }\n\n    if (!_.isFunction(this.search)) {\n      throw new Error('Engine needs to implement search method');\n    }\n\n    this.config = _.defaults({}, config, this.defaultConfiguration());\n  }\n\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    return {};\n  }\n\n  /**\n   * Call a configuration method with the engine scope.\n   *\n   * @param {String} methodName Method name\n   * @param {Object} args       Arguments for the method\n   *\n   * @returns {*}\n   */\n  callConfigMethod(methodName, ...args) {\n    check(methodName, String);\n\n    let func = this.config[methodName];\n\n    if (func) {\n      return func.apply(this, args);\n    }\n  }\n\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   */\n  checkSearchParam(search) {\n    check(search, String);\n  }\n\n  /**\n   *Code to run on index creation\n   *\n   * @param {Object} indexConfig Index configuraction\n   */\n  onIndexCreate(indexConfig) {\n    if (!indexConfig.allowedFields) {\n      indexConfig.allowedFields = indexConfig.fields;\n    }\n  }\n}\n\nexport default Engine;\n","import SearchCollection from './search-collection'\nimport Engine from './engine'\n\n/**\n * A ReactiveEngine handles the reactive logic, such as subscribing\n * and publishing documents into a self contained collection.\n *\n * @type {ReactiveEngine}\n */\nclass ReactiveEngine extends Engine {\n  /**\n   * Constructor.\n   *\n   * @param {Object} config Configuration\n   *\n   * @constructor\n   */\n  constructor(config) {\n    super(config);\n\n    if (this === this.constructor) {\n      throw new Error('Cannot initialize instance of ReactiveEngine');\n    }\n\n    if (!_.isFunction(this.getSearchCursor)) {\n      throw new Error('Reactive engine needs to implement getSearchCursor method');\n    }\n  }\n\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    return _.defaults({}, {\n      transform: (doc) => doc,\n      beforePublish: (event, doc) => doc\n    }, super.defaultConfiguration());\n  }\n\n  /**\n   * Code to run on index creation\n   *\n   * @param {Object} indexConfig Index configuration\n   */\n  onIndexCreate(indexConfig) {\n    super.onIndexCreate(indexConfig);\n    indexConfig.searchCollection = new SearchCollection(indexConfig, this);\n    indexConfig.mongoCollection = indexConfig.searchCollection._collection;\n  }\n\n  /**\n   * Transform the search definition.\n   *\n   * @param {String|Object} searchDefinition Search definition\n   * @param {Object}        options          Search and index options\n   *\n   * @returns {Object}\n   */\n  transformSearchDefinition(searchDefinition, options) {\n    if (_.isString(searchDefinition)) {\n      let obj = {};\n\n      _.each(options.index.fields, function (field) {\n        obj[field] = searchDefinition;\n      });\n\n      searchDefinition = obj;\n    }\n\n    return searchDefinition;\n  }\n\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   * @param indexOptions\n   */\n  checkSearchParam(search, indexOptions) {\n    check(search, Match.OneOf(String, Object));\n\n    if (_.isObject(search)) {\n      _.each(search, function (val, field) {\n        check(val, String);\n\n        if (-1 === _.indexOf(indexOptions.allowedFields, field)) {\n          throw new Meteor.Error(`Not allowed to search over field \"${field}\"`);\n        }\n      });\n    }\n  }\n\n  /**\n   * Reactively search on the collection.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Options\n   *\n   * @returns {Cursor}\n   */\n  search(searchDefinition, options) {\n    if (Meteor.isClient) {\n      return options.index.searchCollection.find(searchDefinition, options.search);\n    } else {\n      return this.getSearchCursor(\n        this.transformSearchDefinition(searchDefinition, options),\n        options\n      );\n    }\n  }\n}\n\nexport default ReactiveEngine;\n","/**\n * A Cursor represents a pointer to the search results. Since it's specific\n * to EasySearch it can also be used to check for valid return values.\n *\n * @type {Cursor}\n */\nclass Cursor {\n  /**\n   * Constructor\n   *\n   * @param {Mongo.Cursor} mongoCursor   Referenced mongo cursor\n   * @param {Number}       count         Count of all documents found\n   * @param {Boolean}      isReady       Cursor is ready\n   * @param {Object}       publishHandle Publish handle to stop if on client\n   *\n   * @constructor\n   *\n   */\n  constructor(mongoCursor, count, isReady = true, publishHandle = null) {\n    check(mongoCursor.fetch, Function);\n    check(count, Number);\n    check(isReady, Match.Optional(Boolean));\n    check(publishHandle, Match.OneOf(null, Object));\n\n    this._mongoCursor = mongoCursor;\n    this._count = count;\n    this._isReady = isReady;\n    this._publishHandle = publishHandle;\n  }\n\n  /**\n   * Fetch the search results.\n   *\n   * @returns {[Object]}\n   */\n  fetch() {\n    return this._mongoCursor.fetch();\n  }\n\n /**\n  * Stop the subscription handle associated with the cursor.\n  */\n  stop() {\n    if (this._publishHandle) {\n      return this._publishHandle.stop();\n    }\n  }\n\n  /**\n   * Return count of all documents found\n   *\n   * @returns {Number}\n   */\n  count() {\n    return this._count;\n  }\n\n  /**\n   * Return if the cursor is ready.\n   *\n   * @returns {Boolean}\n   */\n  isReady() {\n    return this._isReady;\n  }\n\n  /**\n   * Return the raw mongo cursor.\n   *\n   * @returns {Mongo.Cursor}\n   */\n  get mongoCursor() {\n    return this._mongoCursor;\n  }\n\n  /**\n   * Return a fake empty cursor, without data.\n   *\n   * @returns {Object}\n   */\n  static get emptyCursor() {\n    return { fetch: () => [], observe: () => { return { stop: () => null }; }, stop: () => {} };\n  }\n}\n\nexport default Cursor;\n","import { Mongo } from 'meteor/mongo'\nimport Cursor from './cursor'\nimport ReactiveEngine from './reactive-engine'\n\n/**\n * A search collection represents a reactive collection on the client,\n * which is used by the ReactiveEngine for searching.\n *\n * @type {SearchCollection}\n */\nclass SearchCollection {\n  /**\n   * Constructor\n   *\n   * @param {Object}         indexConfiguration Index configuration\n   * @param {ReactiveEngine} engine             Reactive Engine\n   *\n   * @constructor\n   */\n  constructor(indexConfiguration, engine) {\n    check(indexConfiguration, Object);\n    check(indexConfiguration.name, Match.OneOf(String, null));\n\n    if (!(engine instanceof ReactiveEngine)) {\n      throw new Meteor.Error('invalid-engine', 'engine needs to be instanceof ReactiveEngine');\n    }\n\n    this._indexConfiguration = indexConfiguration;\n    this._name = `${indexConfiguration.name}/easySearch`;\n    this._engine = engine;\n\n    if (Meteor.isClient) {\n      this._collection = new Mongo.Collection(this._name);\n    } else if (Meteor.isServer) {\n      this._setUpPublication();\n    }\n  }\n\n  /**\n   * Get name\n   *\n   * @returns {String}\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * Get engine\n   *\n   * @returns {ReactiveEngine}\n   */\n  get engine() {\n    return this._engine;\n  }\n\n  /**\n   * Find documents on the client.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Options\n   *\n   * @returns {Cursor}\n   */\n  find(searchDefinition, options) {\n    if (!Meteor.isClient) {\n      throw new Error('find can only be used on client');\n    }\n\n    let publishHandle = Meteor.subscribe(this.name, searchDefinition, options);\n\n    let count = this._getCount(searchDefinition);\n    let mongoCursor = this._getMongoCursor(searchDefinition, options);\n\n    if (!_.isNumber(count)) {\n      return new Cursor(mongoCursor, 0, false);\n    }\n\n    return new Cursor(mongoCursor, count, true, publishHandle);\n  }\n\n  /**\n   * Get the count of the cursor.\n   *\n   * @params {Object} searchDefinition Search definition\n   *\n   * @returns {Cursor.count}\n   *\n   * @private\n   */\n  _getCount(searchDefinition) {\n    let countDoc = this._collection.findOne('searchCount' + JSON.stringify(searchDefinition));\n\n    if (countDoc) {\n      return countDoc.count;\n    }\n  }\n\n  /**\n   * Get the mongo cursor on the client.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Search options\n   *\n   * @returns {Cursor}\n   * @private\n   */\n  _getMongoCursor(searchDefinition, options) {\n    const clientSort = this.engine.callConfigMethod('clientSort', searchDefinition, options);\n\n    return this._collection.find(\n      { __searchDefinition: JSON.stringify(searchDefinition), __searchOptions: JSON.stringify(options.props) },\n      {\n        transform: (doc) => {\n          delete doc.__searchDefinition;\n          delete doc.__searchOptions;\n          delete doc.__sortPosition;\n\n          doc = this.engine.config.transform(doc);\n\n          return doc;\n        },\n        sort: (clientSort ? clientSort : ['__sortPosition'])\n      }\n    );\n  }\n\n  /**\n   * Return a unique document id for publication.\n   *\n   * @param {Document} doc\n   *\n   * @returns string\n   */\n  generateId(doc) {\n    return doc._id + doc.__searchDefinition + doc.__searchOptions;\n  }\n\n  /**\n   * Add custom fields to the given document\n   *\n   * @param {Document} doc\n   * @param {Object}   data\n   * @returns {*}\n   */\n  addCustomFields(doc, data) {\n    _.forEach(data, function (val, key) {\n      doc['__' + key] = val;\n    });\n\n    return doc;\n  }\n\n  /**\n   * Set up publication.\n   *\n   * @private\n   */\n  _setUpPublication() {\n    var collectionScope = this,\n      collectionName = this.name;\n\n    Meteor.publish(collectionName, function (searchDefinition, options) {\n      check(searchDefinition, Match.OneOf(String, Object));\n      check(options, Object);\n\n      let definitionString = JSON.stringify(searchDefinition),\n        optionsString = JSON.stringify(options.props);\n\n      options.userId = this.userId;\n      options.publicationScope = this;\n\n      if (!collectionScope._indexConfiguration.permission(options)) {\n        throw new Meteor.Error('not-allowed', \"You're not allowed to search this index!\");\n      }\n\n      collectionScope.engine.checkSearchParam(searchDefinition, collectionScope._indexConfiguration);\n\n      let cursor = collectionScope.engine.search(searchDefinition, {\n        search: options,\n        index: collectionScope._indexConfiguration\n      });\n\n      const count = cursor.count();\n\n      this.added(collectionName, 'searchCount' + definitionString, { count });\n\n      let intervalID;\n\n      if (collectionScope._indexConfiguration.countUpdateIntervalMs) {\n        intervalID = Meteor.setInterval(\n          () => this.changed(\n            collectionName,\n            'searchCount' + definitionString,\n            { count: cursor.mongoCursor.count && cursor.mongoCursor.count() || 0 }\n          ),\n          collectionScope._indexConfiguration.countUpdateIntervalMs\n        );\n      }\n\n      this.onStop(function () {\n        intervalID && Meteor.clearInterval(intervalID);\n        resultsHandle && resultsHandle.stop();\n      });\n\n      let observedDocs = [];\n\n      const updateDocWithCustomFields = (doc, sortPosition) => collectionScope\n        .addCustomFields(doc, {\n          originalId: doc._id,\n          sortPosition,\n          searchDefinition: definitionString,\n          searchOptions: optionsString,\n        });\n\n      let resultsHandle = cursor.mongoCursor.observe({\n        addedAt: (doc, atIndex, before) => {\n          doc = collectionScope.engine.config.beforePublish('addedAt', doc, atIndex, before);\n          doc = updateDocWithCustomFields(doc, atIndex);\n\n          this.added(collectionName, collectionScope.generateId(doc), doc);\n\n          /*\n           * Reorder all observed docs to keep valid sorting. Here we adjust the\n           * sortPosition number field to give space for the newly added doc\n           */\n          if (observedDocs.map(d => d.__sortPosition).includes(atIndex)) {\n            observedDocs = observedDocs.map((doc, docIndex) => {\n              if (doc.__sortPosition >= atIndex) {\n                doc = collectionScope.addCustomFields(doc, {\n                  sortPosition: doc.__sortPosition + 1,\n                });\n\n                // do not throw changed event on last doc as it will be removed from cursor\n                if (docIndex < observedDocs.length) {\n                  this.changed(\n                    collectionName,\n                    collectionScope.generateId(doc),\n                    doc\n                  );\n                }\n              }\n\n              return doc;\n            });\n          }\n\n          observedDocs = [...observedDocs , doc];\n        },\n        changedAt: (doc, oldDoc, atIndex) => {\n          doc = collectionScope.engine.config.beforePublish('changedAt', doc, oldDoc, atIndex);\n          doc = collectionScope.addCustomFields(doc, {\n            searchDefinition: definitionString,\n            searchOptions: optionsString,\n            sortPosition: atIndex,\n            originalId: doc._id\n          });\n\n          this.changed(collectionName, collectionScope.generateId(doc), doc);\n        },\n        movedTo: (doc, fromIndex, toIndex, before) => {\n          doc = collectionScope.engine.config.beforePublish('movedTo', doc, fromIndex, toIndex, before);\n          doc = updateDocWithCustomFields(doc, toIndex);\n\n          let beforeDoc = collectionScope._indexConfiguration.collection.findOne(before);\n\n          if (beforeDoc) {\n            beforeDoc = collectionScope.addCustomFields(beforeDoc, {\n              searchDefinition: definitionString,\n              searchOptions: optionsString,\n              sortPosition: fromIndex\n            });\n            this.changed(collectionName, collectionScope.generateId(beforeDoc), beforeDoc);\n          }\n\n          this.changed(collectionName, collectionScope.generateId(doc), doc);\n        },\n        removedAt: (doc, atIndex) => {\n          doc = collectionScope.engine.config.beforePublish('removedAt', doc, atIndex);\n          doc = collectionScope.addCustomFields(\n            doc,\n            {\n              searchDefinition: definitionString,\n              searchOptions: optionsString\n            });\n          this.removed(collectionName, collectionScope.generateId(doc));\n\n          /*\n           * Adjust sort position for all docs after the removed doc and\n           * remove the doc from the observed docs array\n           */\n          observedDocs = observedDocs.map(doc => {\n            if (doc.__sortPosition > atIndex) {\n              doc.__sortPosition -= 1;\n            }\n\n            return doc;\n          }).filter(\n            d => collectionScope.generateId(d) !== collectionScope.generateId(doc)\n          );\n        }\n      });\n\n      this.onStop(function () {\n        resultsHandle.stop();\n      });\n\n      this.ready();\n    });\n  }\n}\n\nexport default SearchCollection;\n","import Cursor from '../core/cursor';\nimport ReactiveEngine from '../core/reactive-engine';\n\n/**\n * The MongoDBEngine lets you search the index on the server side with MongoDB. Subscriptions and publications\n * are handled within the Engine.\n *\n * @type {MongoDBEngine}\n */\nclass MongoDBEngine extends ReactiveEngine {\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    return _.defaults({}, MongoDBEngine.defaultMongoConfiguration(this), super.defaultConfiguration());\n  }\n\n  /**\n   * Default mongo configuration, used in constructor and MinimongoEngine to get the configuration.\n   *\n   * @param {Object} engineScope Scope of the engine\n   *\n   * @returns {Object}\n   */\n  static defaultMongoConfiguration(engineScope) {\n    return {\n      aggregation: '$or',\n      selector(searchObject, options, aggregation) {\n        const selector = {};\n\n        selector[aggregation] = [];\n\n        _.each(searchObject, (searchString, field) => {\n          const fieldSelector = engineScope.callConfigMethod(\n            'selectorPerField', field, searchString, options\n          );\n\n          if (fieldSelector) {\n            selector[aggregation].push(fieldSelector);\n          }\n        });\n\n        return selector;\n      },\n      selectorPerField(field, searchString) {\n        const selector = {};\n\n        searchString = searchString.replace(/(\\W{1})/g, '\\\\$1');\n        selector[field] = { '$regex' : `.*${searchString}.*`, '$options' : 'i'};\n\n        return selector;\n      },\n      sort(searchObject, options) {\n        return options.index.fields;\n      }\n    };\n  }\n\n  /**\n   * Return the find options for the mongo find query.\n   *\n   * @param {String} searchDefinition Search definition\n   * @param {Object} options          Search and index options\n   */\n  getFindOptions(searchDefinition, options) {\n    return {\n      skip: options.search.skip,\n      limit: options.search.limit,\n      disableOplog: this.config.disableOplog,\n      pollingIntervalMs: this.config.pollingIntervalMs,\n      pollingThrottleMs: this.config.pollingThrottleMs,\n      sort: this.callConfigMethod('sort', searchDefinition, options),\n      fields: this.callConfigMethod('fields', searchDefinition, options)\n    };\n  }\n\n  /**\n   * Return the reactive search cursor.\n   *\n   * @param {String} searchDefinition Search definition\n   * @param {Object} options          Search and index options\n   */\n  getSearchCursor(searchDefinition, options) {\n    const selector = this.callConfigMethod(\n        'selector',\n        searchDefinition,\n        options,\n        this.config.aggregation\n      ),\n      findOptions = this.getFindOptions(searchDefinition, options),\n      collection = options.index.collection;\n\n    check(options, Object);\n    check(selector, Object);\n    check(findOptions, Object);\n\n    return new Cursor(\n      collection.find(selector, findOptions),\n      collection.find(selector).count()\n    );\n  }\n}\n\nexport default MongoDBEngine;\n","import Engine from '../core/engine';\nimport ReactiveEngine from '../core/reactive-engine';\nimport MongoDBEngine from './mongo-db';\n\n/**\n * The MinimongEngine lets you search the index on the client-side.\n *\n * @type {MinimongoEngine}\n */\nclass MinimongoEngine extends Engine {\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    return _.defaults({}, MongoDBEngine.defaultMongoConfiguration(this), super.defaultConfiguration());\n  }\n\n  /**\n   * Search the index.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Object of options\n   *\n   * @returns {cursor}\n   */\n  search(searchDefinition, options) {\n    if (!Meteor.isClient) {\n      throw new Meteor.Error('only-client', 'Minimongo can only be used on the client');\n    }\n\n    searchDefinition = this.transformSearchDefinition(searchDefinition, options);\n\n    // check() calls are in getSearchCursor method\n    return MongoDBEngine.prototype.getSearchCursor.apply(this, [searchDefinition, options]);\n  }\n}\n\nMinimongoEngine.prototype.checkSearchParam = ReactiveEngine.prototype.checkSearchParam;\nMinimongoEngine.prototype.transformSearchDefinition = ReactiveEngine.prototype.transformSearchDefinition;\n\nMinimongoEngine.prototype.getFindOptions = function (...args) {\n  let findOptions = MongoDBEngine.prototype.getFindOptions.apply(this, args);\n\n  findOptions.transform = this.config.transform;\n\n  return findOptions;\n};\n\nexport default MinimongoEngine;\n","import ReactiveEngine from '../core/reactive-engine';\nimport MongoDBEngine from './mongo-db';\n\n/**\n * The MongoTextIndexEngine lets you search the index with Mongo text indexes.\n *\n * @type {MongoTextIndexEngine}\n */\nclass MongoTextIndexEngine extends ReactiveEngine {\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    let mongoConfiguration = MongoDBEngine.defaultMongoConfiguration(this);\n\n    mongoConfiguration.selector = function (searchString) {\n      if (searchString.trim()) {\n        return { $text: { $search: searchString } };\n      }\n\n      return {};\n    };\n\n    return _.defaults({}, mongoConfiguration, super.defaultConfiguration());\n  }\n\n  /**\n   * Setup the index on creation.\n   *\n   * @param {Object} indexConfig Index configuration\n   */\n  onIndexCreate(indexConfig) {\n    super.onIndexCreate(indexConfig);\n\n    if (Meteor.isServer) {\n      let textIndexesConfig = {};\n\n      _.each(indexConfig.fields, function (field) {\n        textIndexesConfig[field] = 'text';\n      });\n\n      if (indexConfig.weights) {\n        textIndexesConfig.weights = options.weights();\n      }\n\n      indexConfig.collection._ensureIndex(textIndexesConfig);\n    }\n  }\n\n  /**\n   * Transform the search definition.\n   *\n   * @param {String|Object} searchDefinition Search definition\n   * @param {Object}        options          Search and index options\n   *\n   * @returns {Object}\n   */\n  transformSearchDefinition(searchDefinition, options) {\n    return searchDefinition;\n  }\n\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   */\n  checkSearchParam(search) {\n    check(search, String);\n  }\n}\n\n// Explicitely inherit getSearchCursor method functionality\nMongoTextIndexEngine.prototype.getSearchCursor = MongoDBEngine.prototype.getSearchCursor;\nMongoTextIndexEngine.prototype.getFindOptions = MongoDBEngine.prototype.getFindOptions;\n\nexport default MongoTextIndexEngine;\n","import {\n  Index,\n  Engine,\n  ReactiveEngine,\n  Cursor,\n  MongoDBEngine,\n  MinimongoEngine,\n  MongoTextIndexEngine\n} from './main';\n\nEasySearch = {\n  // Core\n  Index,\n  Engine,\n  ReactiveEngine,\n  Cursor,\n  // Engines\n  MongoDB: MongoDBEngine,\n  Minimongo: MinimongoEngine,\n  MongoTextIndex: MongoTextIndexEngine\n};\n","import Index from './core/index';\nimport Engine from './core/engine';\nimport ReactiveEngine from './core/reactive-engine';\nimport Cursor from './core/cursor';\nimport MongoDBEngine from './engines/mongo-db';\nimport MinimongoEngine from './engines/minimongo';\nimport MongoTextIndexEngine from './engines/mongo-text-index';\n\nexport {\n  Index,\n  Engine,\n  ReactiveEngine,\n  Cursor,\n  MongoDBEngine,\n  MinimongoEngine,\n  MongoTextIndexEngine\n};\n"]}