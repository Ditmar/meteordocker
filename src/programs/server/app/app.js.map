{"version":3,"sources":["meteor://游눹app/imports/api/collections/server/publications.js","meteor://游눹app/imports/api/collections/collections.js","meteor://游눹app/imports/api/collections/methods_cargos.js","meteor://游눹app/imports/api/collections/methods_comprobantes.js","meteor://游눹app/imports/api/collections/methods_consultorio.js","meteor://游눹app/imports/api/collections/methods_empresas.js","meteor://游눹app/imports/api/collections/methods_estados_financieros.js","meteor://游눹app/imports/api/collections/methods_fichas.js","meteor://游눹app/imports/api/collections/methods_historiales.js","meteor://游눹app/imports/api/collections/methods_mayores.js","meteor://游눹app/imports/api/collections/methods_medicamentos.js","meteor://游눹app/imports/api/collections/methods_medicos.js","meteor://游눹app/imports/api/collections/methods_pacientes.js","meteor://游눹app/imports/api/collections/methods_plan_cuentas.js","meteor://游눹app/imports/api/collections/methods_roles.js","meteor://游눹app/imports/api/collections/methods_salas.js","meteor://游눹app/imports/api/collections/methods_turnos.js","meteor://游눹app/imports/api/collections/methods_users.js","meteor://游눹app/server/main.js"],"names":["Meteor","module","link","v","Usuarios","ClaveRegistro","Cargos","Images","Especialidades","Consultorios","Medicos","Pacientes","Empresas","Turnos","Salas","Camas","Medicamentos","Compras","Ventas","Clientes","ReporteFarmacia","Fichas","FichasEnfermeria","ReporteFichas","Historiales","Consultas","Internaciones","Quirofano","SignosVitales","SalaPartos","Diagnostico","Laboratorios","PlanCuentas","Comprobantes","Mayores","EstadosFinancieros","EstadoConta","Lineas","FichaInternacion","DetalleFicha","Servicios","exportDefault","publish","find","sort","nombre","ap_paterno","ap_materno","nombre_cons","nombre_cargo","nombre_empresa","nombre_turno","especialidad","nombre_sala","nro_cama","servicio","nombre_comercial","codigo_compra","codigo_venta","codigo_reporte","nombre_linea","codigo_asegurado","nro","fecha_reg","nombre_diag","nomb_gral","nomb_analisis","codigo_cuenta","fecha","cursor","export","UsuariosIndex","MedicamentosIndex","MedicamentosInventarioIndex","ClientesIndex","PacientesAsegIndex","PacientesIndex","HistorialesIndex","LaboratoriosIndex","Mongo","Index","MinimongoEngine","FilesCollection","collectionName","allowClientCode","storagePath","fileObj","_id","path","process","env","PWD","onBeforeUpload","file","size","test","extension","Collection","collection","fields","engine","selector","searchObject","options","aggregation","defaultConfiguration","eliminado","defaultSearchOptions","limit","activo","item","asegurado","codigo_h","insertCargo","updateCargo","updateCargoNroUs","removeCargo","ValidateMethod","SimpleSchema","ValidatedMethod","name","validate","type","String","descripcion_cargo","nro_usuarios","Number","color","validator","run","insert","id","update","$set","remove","insertComprobante","insertEstadoConta","updateEstadoConta","nro_comprobante","tipo_comprobante","dia","mes","a침o","nro_cheque","glosa","cuentas","Object","total_debe","total_haber","Date","abierto","Boolean","cerrado","insertConsultorio","removeConsultorio","updateConsultorio","updateActivConsultorio","imagen_cons","codigo_cons","descripcion_cons","precio_aseg","precio_part","precio_aseg_recons","precio_part_recons","precio_aseg_emer","precio_part_emer","tiempo_consulta","turnos","medico_cons","sin_horario","hora_ing_am","hora_sal_am","hora_ing_pm","hora_sal_pm","hora_ing_nc","hora_sal_nc","lunes_am","martes_am","miercoles_am","jueves_am","viernes_am","sabado_am","lunes_pm","martes_pm","miercoles_pm","jueves_pm","viernes_pm","sabado_pm","lunes_nc","martes_nc","miercoles_nc","jueves_nc","viernes_nc","sabado_nc","insertEmpresa","updateEmpresa","removeEmpresa","nit","logo","registrado_por","insertEstadoFinanciero","updateEstadoFinanciero","removeEstadoFinanciero","tipo","nivel","gestion","saldo","insertFicha","ventaFicha","updateEstadoFicha","updateMedFicha","updateEstadoFichaMed","updateHistLlenaFichaMed","updateElimFicha","insertReporteFicha","updateReporteFicha","insertFichaFarmacia","updateElimFichaFarm","updateFichaFarmacia","updateEstadoFichaEnf","updateFinConsFichaEnf","updatePrecioFichaEnf","insertDetalleFicha","updatePrecioDetalleFicha","removeDetalleFicha","removeAllDetalleFicha","insertFichaInternacion","updatePrecioFichaInternacion","updateReporteFichaInternacion","removeFichaInternacion","hora_cons","consultorio","medico","optional","estado","fecha_cons","turno","precio","paciente","empleador","tipo_consulta","por","en_fech","substr","reportado","historia_llena","fecha_reporte","hora_reporte","reporte_enviado","us_env","total","reporte_recibido","dia_rec","mes_rec","a침o_rec","hora_recibido","us_rec","dia_env","mes_env","a침o_env","fecha_recibido","$and","$ne","multi","pagado","diagnostico","fin_consulta","id_ficha","precio_diag","pagado_diag","codigo_internacion","id_paciente","id_servicio","detalle","monto","factura","createHistorial","updateHistorial","insertConsulta","insertReceta","insertDiagnostico","insertConsultaEnfermeria","insertInternacionPaciente","insertEvolucionPaciente","insertIndicacionMedica","insertIndicacionEnfermeria","insertEpicrisisMedica","insertCirugiaMedica","insertInternacion","updateAdmisionInternacion","updateAltaMedicaInternacion","updateAltaEnfermeriaInternacion","updatePagoEnfermeriaInternacion","updateReportadoInternacion","insertQuirofano","updateEditQuirofano","updateQuirofano","removeQuirofano","insertSignosVitales","insertPartos","ci","reg_por","fecha_creacion","sexo","edad","tipo_edad","domicilio","ocupacion","ficha_id","nro_ficha","fecha_consulta","hora_consulta","pre_art","frec_card","frec_resp","temperatura","gestas","para","abortos","cesareas","fum","motivo_consulta","enfermedad_actual","ant_patologicos","examen_fisico","tratamiento","est_solicitados","recomendaciones","ambulatorio","medicamento","cantidad","uso","$push","otro","administracion","via","enfermera","ambulatorio_enf","tipo_sala","sala","cama","fecha_ing","hora_ing","piel_mucosas","glasgow","cabeza","cuello","torax","abdomen","extremidades","conducta","internacion","hora","subjetivo","objetivo","evolucion","plan","analisis","indicaciones","indicacion","indicacion_enf","resumen_enf_actual","exploracion_fisica","pruebas_lab","fecha_quirurgica","hora_quirurgica","diagnostico_prequirurgico","antibioterapia","indicaciones_alta","tipo_alta","estado_clinico_alta","diag_definitivo","medico_responsable","fecha_alta","hora_alta","epicrisis","codigo_cirugia","fecha_int","cirujano","procedimiento","fecha_cirugia","hora_cirugia","tiempo_cirugia","inf_cirugia","cirugia","dia_cirugia","mes_cirugia","a침o_cirugia","transferido_por","admision","alta_medica","alta_enfermeria","admision_enf","medico_alta","alta_medica_fecha","alta_medica_hora","dia_alta","mes_alta","a침o_alta","fecha_alta_reg","cobrado_por","otros","finalizado","informe","sin_control","nombre_control","dato_control","fecha_salida","hora_salida","fecha_nac","hora_nac","peso","talla","descripcion","dia_nac","mes_nac","a침o_nac","insertMayor","updateMayor","updateTotalesMayor","debe","haber","movimientos","insertMedicamento","updateMedicamCant","updateStockMedicam","updateMedicamento","removeMedicamento","insertCompraMedicamento","insertVentaMedicamento","devolucionMedicamFarmacia","devolucionVentaFarmacia","updateClienteVenta","insertReporteFarmacia","updateReporteFarmacia","insertCliente","updateCliente","insertLinea","updateLinea","removeLinea","linea","nombre_generico","unidad","fecha_caducidad","puc","puv","devolucion","fetch","detalle_compra","fecha_registro","getDate","getMonth","getFullYear","id_us","dia_reg","mes_reg","a침o_reg","hora_reg","baja","detalle_venta","devuelto","$pull","id_medicamento","telefono","insertMedico","updateMedico","updateMedicoUs","removeMedico","updateMedicoEsp","asignado","idUs","titulo","avatar","insertPaciente","updatePaciente","updatePartAseg","removeAsegDep","removeAsegTit","tipo_paciente","parentesco","fecha_extincion","direccion","foto","observaciones","codigo_aseg_ant","obs_fecha","obs_titulo","obs_concepto","obs_propietario","insertPlanCuenta","removePlanCuenta","updatePlanCuenta","codigo_superior","nombre_cuenta","cuenta_mayor","libro_mayor","insertRoles","editRoles","userId","roles","Roles","addUsersToRoles","setUserRoles","insertSala","updateSala","removeSala","insertCama","updateCama","removeCama","insertServicio","updateServicio","removeServicio","imagen","id_sala","ocupado","insertTurno","updateTurno","removeTurno","codigo_turno","imagen_turno","medicos","insertUsuario","claveReg","updateEstadoUs","updateRolesUs","updateUsuario","updateRemoveUs","removeForeverUs","updateCargoUs","updateAvatarUs","updateUserId","subsistema","fecha_nacimiento","celular","telf_referencia","user","password","propietario_reg","propietario_elim","fecha_elim","codigoReg","cargo","pubs","default"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\r\nimport { Usuarios, ClaveRegistro, Cargos, Images, Especialidades, Consultorios, Medicos, Pacientes, Empresas, Turnos, Salas, Camas, Medicamentos, Compras, Ventas, Clientes, ReporteFarmacia, Fichas, FichasEnfermeria, ReporteFichas, Historiales, Consultas, Internaciones, Quirofano, SignosVitales, SalaPartos, Diagnostico, Laboratorios, PlanCuentas, Comprobantes, Mayores, EstadosFinancieros, EstadoConta, Lineas, FichaInternacion, DetalleFicha, Servicios } from '../collections.js';\r\n\r\nexport default function(){\r\n    /*UploadServer.init({\r\n      tmpDir:  'D:/meteor_projects/clinical_system_0.9/.tmp',\r\n      uploadDir: 'D:/meteor_projects/clinical_system_0.9/.uploads/',\r\n      checkCreateDirectories: true //create the directories for you\r\n  });*/\r\n\r\n //ADMINISTRADOR\r\n    Meteor.publish('usuarios', function(){\r\n        return Usuarios.find({},{sort:{nombre: 1, ap_paterno: 1, ap_materno: 1}});//{estado:{$ne:'Eliminado'}}\r\n    });\r\n    Meteor.publish('claveRegistro', function(){\r\n        return ClaveRegistro.find({});\r\n    });\r\n    /*Meteor.publish('images', function(){\r\n        return Images.find({}, {sort: {nombre_img: 1}});\r\n    });*/\r\n    /*Meteor.publish('especialidades', function () {\r\n        return Especialidades.find({}, {sort: {nombre_esp: 1}});\r\n    });*/\r\n    //CONSULTORIOS\r\n    Meteor.publish('consultorios', function(){\r\n        return Consultorios.find({}, {sort: {nombre_cons: 1}});\r\n    });\r\n    //CARGOS\r\n    Meteor.publish('cargos', function(){\r\n        return Cargos.find({}, {sort: {nombre_cargo: 1}});\r\n    });\r\n    //EMPRESAS\r\n    Meteor.publish('empresas', function(){\r\n        return Empresas.find({}, {sort: {nombre_empresa: 1}});\r\n    });\r\n    //TURNOS\r\n    Meteor.publish('turnos', function(){\r\n        return Turnos.find({}, {sort: {nombre_turno: 1}});\r\n    });\r\n    //MEDICOS\r\n    Meteor.publish('medicos', function(){\r\n        return Medicos.find({},{sort: {especialidad: 1}});\r\n    });\r\n    //SALAS\r\n    Meteor.publish('salas', function(){\r\n        return Salas.find({},{sort: {nombre_sala: 1}});\r\n    });\r\n    //CAMAS\r\n    Meteor.publish('camas', function(){\r\n        return Camas.find({},{sort: {nro_cama: 1}});\r\n    });\r\n    //SERVICIOS\r\n    Meteor.publish('servicios', function(){\r\n        return Servicios.find({},{sort: {servicio: 1}});\r\n    });\r\n\r\n\r\n\r\n//FARMACIA\r\n    // MEDICAMENTOS\r\n    Meteor.publish('medicamentos', function(){\r\n        return Medicamentos.find({},{sort: {nombre_comercial: 1}});\r\n    });\r\n    //COMPRA DE MEDICAMENTOS\r\n    Meteor.publish('compras', function(){\r\n        return Compras.find({},{sort: {codigo_compra: -1}});\r\n    });\r\n    //VENTA DE MEDICAMENTOS\r\n    Meteor.publish('ventas', function(){\r\n        return Ventas.find({},{sort: {codigo_venta: 1}});\r\n    });\r\n    //REPORTE FARMACIA\r\n    Meteor.publish('reportefarmacia', function(){\r\n        return ReporteFarmacia.find({}, {sort: {codigo_reporte: -1}});\r\n    });\r\n    //CLIENTES\r\n    Meteor.publish('clientes', function(){\r\n        return Clientes.find({}, {sort: {nombre: 1}});\r\n    });\r\n    //LINEA FARMACEUTICA\r\n    Meteor.publish('lineas', function(){\r\n        return Lineas.find({}, {sort: {nombre_linea: 1}});\r\n    })\r\n//AFILIACION Y FICHAJE\r\n    //PACIENTES\r\n    Meteor.publish('pacientes', function(){\r\n        return Pacientes.find({},{sort: {codigo_asegurado: 1}});\r\n    });\r\n    //FICHAS\r\n    Meteor.publish('fichas', function(){\r\n        return Fichas.find({});\r\n    });\r\n    //FICHAS ENFERMERIA\r\n    Meteor.publish('fichasenfermeria', function(){\r\n        return FichasEnfermeria.find({},{sort: {nro: -1}});\r\n    });\r\n    //REPORTE DE FICHAS\r\n    Meteor.publish('reportefichas', function(){\r\n        return ReporteFichas.find({});\r\n    })\r\n    //FICHA INTERNACION\r\n    Meteor.publish('fichainternacion', function(){\r\n        return FichaInternacion.find({}, {sort: {fecha_reg: 1}});\r\n    });\r\n\r\n    // DETALLE FICHA ENFERMERIA\r\n    Meteor.publish('detalleficha', function(){\r\n        return DetalleFicha.find({});\r\n    })\r\n\r\n//CONSULTAS MEDICAS\r\n    Meteor.publish('historiales', function(){\r\n        return Historiales.find({});\r\n    });\r\n    //DIAGNOSTICO\r\n    Meteor.publish('diagnostico', function(){\r\n        return Diagnostico.find({},{sort: {nombre_diag: 1}});\r\n    });\r\n    //LABORATORIOS\r\n    Meteor.publish('laboratorios', function(){\r\n        return Laboratorios.find({},{sort: {nomb_gral: 1, nomb_analisis: 1}});\r\n    });\r\n    //CONSULTAS\r\n    Meteor.publish('consultas', function(){\r\n        return Consultas.find({},{sort: {fecha_reg: 1}});\r\n    });\r\n    //INTERNACIONES\r\n    Meteor.publish('internaciones', function(){\r\n        return Internaciones.find({},{sort: {fecha_reg: 1}});\r\n    });\r\n\r\n    //QUIROFANO\r\n    Meteor.publish('quirofano', function(){\r\n        return Quirofano.find({});\r\n    });\r\n\r\n    //SIGNOS VITALES\r\n    Meteor.publish('signosvitales', function(){\r\n        return SignosVitales.find({});\r\n    });\r\n\r\n    //SIGNOS VITALES\r\n    Meteor.publish('salapartos', function(){\r\n        return SalaPartos.find({});\r\n    });\r\n\r\n//CONTABILIDAD\r\n    //PLAN DE CUENTAS\r\n    Meteor.publish('plancuentas', function(){\r\n        return PlanCuentas.find({}, {sort: {codigo_cuenta: 1}});\r\n    });\r\n    // COMPROBANTES\r\n    Meteor.publish('comprobantes', function(){\r\n        return Comprobantes.find({}, {sort: {fecha: 1}});\r\n    });\r\n    //MAYORES\r\n    Meteor.publish('mayores', function(){\r\n        return Mayores.find({});\r\n    });\r\n    //ESTADOS FINANCIEROS\r\n    Meteor.publish('estadosfinancieros', function(){\r\n        return EstadosFinancieros.find({});\r\n    });\r\n    //ESTADO CONTABILIDAD\r\n    Meteor.publish('estadoconta', function(){\r\n        return EstadoConta.find({});\r\n    })\r\n\r\n    Meteor.publish('images', function(){\r\n        return Images.find().cursor;\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n};\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { Mongo } from 'meteor/mongo';\r\nimport { Index, MinimongoEngine } from 'meteor/easy:search';\r\nimport { FilesCollection } from 'meteor/ostrio:files';\r\n//import fs from 'fs';\r\n/*\r\nMeteor.onConnection(function(conn) {\r\n    console.log(conn.clientAddress);\r\n    console.log(conn.httpHeaders.host);\r\n});*/\r\n//const fs =  Npm.require('fs-extra');\r\n\r\n//GENERAL\r\n    //CARGAR IMAGENES\r\n    export const Images = new FilesCollection({\r\n        //debug: true,\r\n        collectionName: 'Images',\r\n        allowClientCode: false, // Disallow remove files from Client\r\n        storagePath: function (fileObj) {\r\n            // Do not use \"fat arrow\" as context is matters\r\n            if (fileObj && fileObj._id) {\r\n                let path = process.env.PWD + '/Uploads/Images'; //'assets/app/uploads/Images'; //'/meteor_projects/clinical_system_1.0/Img';\r\n                //fs.ensureDirSync(path); /home/isma/Documentos/meteor_projects/clinical_system_1.0'\r\n                return path;\r\n            } else {\r\n                return 'assets/app/uploads/Images';\r\n            }\r\n        },\r\n        onBeforeUpload: function (file) {\r\n            // Allow upload files under 10MB, and only in png/jpg/jpeg formats\r\n            if (file.size <= 1024 * 1024 * 10 && /png|gif|jpg|jpeg|pdf/i.test(file.extension)) {\r\n                return true;\r\n            }\r\n            return 'Suba la imagen, con un tama침o igual o inferior a 10MB';\r\n        }\r\n    });\r\n\r\n\r\n// ADMINISTRADOR\r\n    // TABLA USUARIOS\r\n    export const Usuarios = new Mongo.Collection('Usuarios');\r\n\r\n    export const UsuariosIndex = new Index({\r\n        collection: Usuarios,\r\n        fields: ['ci', 'nombre', 'ap_paterno', 'subsistema'],\r\n        engine: new MinimongoEngine({\r\n            sort: () => { nombre: 1},\r\n            selector: function (searchObject, options, aggregation) {\r\n                let selector = this.defaultConfiguration().selector(searchObject, options, aggregation)\r\n                selector.eliminado = false\r\n                return  selector\r\n            }\r\n        }),\r\n        defaultSearchOptions: {limit: 10}\r\n    });\r\n\r\n    // TABLA CLAVE REGISTRO\r\n    export const ClaveRegistro = new Mongo.Collection('ClaveRegistro');\r\n\r\n    // TABLA IMAGES\r\n    //export const Images = new Mongo.Collection('Images');\r\n\r\n    //TABLA ESPECIALIDADES\r\n    export const Especialidades = new Mongo.Collection('Especialidades');\r\n    //TABLA CONSULTORIOS\r\n    export const Consultorios = new Mongo.Collection('Consultorios');\r\n    //TABLA CARGOS\r\n    export const Cargos = new Mongo.Collection('Cargos');\r\n\r\n    //TABLA MEDICOS\r\n    export const Medicos = new Mongo.Collection('Medicos');\r\n\r\n    //TABLA EMPRESAS\r\n    export const Empresas = new Mongo.Collection('Empresas');\r\n\r\n    //TABLA TURNOS\r\n    export const Turnos = new Mongo.Collection('Turnos');\r\n\r\n    //TABLA SALAS\r\n    export const Salas = new Mongo.Collection('Salas');\r\n\r\n    //TABLA CAMAS\r\n    export const Camas = new Mongo.Collection('Camas');\r\n\r\n    //TABLA SERVICIOS\r\n    export const Servicios = new Mongo.Collection('Servicios');\r\n\r\n//FARMACIA\r\n    //TABLA MEDICAMENTOS\r\n    export const Medicamentos = new Mongo.Collection('Medicamentos');\r\n\r\n    export const MedicamentosIndex = new Index({\r\n        collection: Medicamentos,\r\n        fields: ['item', 'nombre_comercial', 'nombre_generico'],\r\n        engine: new MinimongoEngine({\r\n            sort: () => { nombre_comercial: 1},\r\n            selector: function (searchObject, options, aggregation) {\r\n                let selector = this.defaultConfiguration().selector(searchObject, options, aggregation)\r\n                selector.activo = true\r\n                return  selector\r\n            }\r\n        }),\r\n        defaultSearchOptions: {limit: 3}\r\n    });\r\n    export const MedicamentosInventarioIndex = new Index({\r\n        collection: Medicamentos,\r\n        fields: ['item', 'nombre_comercial', 'nombre_generico', 'linea'],\r\n        engine: new MinimongoEngine({\r\n            sort: () => { nombre_comercial: 1},\r\n            selector: function (searchObject, options, aggregation) {\r\n                let selector = this.defaultConfiguration().selector(searchObject, options, aggregation)\r\n                selector.activo = true\r\n                return  selector\r\n            }\r\n        }),\r\n        //defaultSearchOptions: {limit: 50}\r\n    });\r\n\r\n    // COMPRA MEDICAMENTO\r\n    export const Compras = new Mongo.Collection('Compras');\r\n\r\n    // COMPRA MEDICAMENTO\r\n    export const Ventas = new Mongo.Collection('Ventas');\r\n\r\n    // REPORTES FARMACIA\r\n    export const ReporteFarmacia = new Mongo.Collection('ReporteFarmacia');\r\n\r\n    //TABLA CLIENTES\r\n    export const Clientes = new Mongo.Collection('Clientes');\r\n\r\n    export const ClientesIndex = new Index({\r\n        collection: Clientes,\r\n        fields: ['ci', 'nombre'],\r\n        engine: new MinimongoEngine({\r\n            sort: () => { item: 1},\r\n            /*selector: function (searchObject, options, aggregation) {\r\n                let selector = this.defaultConfiguration().selector(searchObject, options, aggregation)\r\n                selector.activo = true\r\n                return  selector\r\n            }*/\r\n        }),\r\n        defaultSearchOptions: {limit: 3}\r\n    });\r\n    //LINEAS FARMACEUTICAS\r\n    export const Lineas = new Mongo.Collection('Lineas');\r\n\r\n// AFILIACION Y FICHAJE\r\n    //TABLA PACIENTES\r\n    export const Pacientes = new Mongo.Collection('Pacientes');\r\n\r\n    export const PacientesAsegIndex = new Index({\r\n        collection: Pacientes,\r\n        fields: ['codigo_asegurado', 'ci', 'nombre', 'ap_paterno'],\r\n        engine: new MinimongoEngine({\r\n            sort: () => { codigo_asegurado: -1},\r\n            selector: function (searchObject, options, aggregation) {\r\n                let selector = this.defaultConfiguration().selector(searchObject, options, aggregation)\r\n                selector.asegurado = true\r\n                //selector.tipo_paciente = 'Titular'\r\n                return  selector\r\n            }\r\n        }),\r\n        defaultSearchOptions: {limit: 20}\r\n    });\r\n    export const PacientesIndex = new Index({\r\n        collection: Pacientes,\r\n        fields: ['codigo_asegurado', 'ci', 'nombre', 'ap_paterno'],\r\n        engine: new MinimongoEngine({\r\n            sort: () => { nombre: 1},\r\n            /*selector: function (searchObject, options, aggregation) {\r\n                let selector = this.defaultConfiguration().selector(searchObject, options, aggregation)\r\n                selector.asegurado = true\r\n                //selector.tipo_paciente = 'Titular'\r\n                return  selector\r\n            }*/\r\n        }),\r\n        defaultSearchOptions: {limit: 10}\r\n    });\r\n\r\n    //TABLA DE FICHAS\r\n    export const Fichas = new Mongo.Collection('Fichas');\r\n\r\n    //TABLA FICHAS ENFERMERIA\r\n    export const FichasEnfermeria = new Mongo.Collection('FichasEnfermeria');\r\n\r\n    //TABLA REPORTE DE FICHAS\r\n    export const ReporteFichas = new Mongo.Collection('ReporteFichas');\r\n\r\n    //TABLA FICHA INTERNACION\r\n    export const FichaInternacion = new Mongo.Collection('FichaInternacion');\r\n\r\n    //TABLA FICHA DIAGNOSTICO ENFERMERIA\r\n    export const DetalleFicha = new Mongo.Collection('DetalleFicha');\r\n\r\n// ATENCION MEDICA\r\n    // DIAGN칍STICO\r\n    export const Diagnostico = new Mongo.Collection('Diagnostico');\r\n\r\n    //TABLA HISTORIAL\r\n    export const Historiales = new Mongo.Collection('Historiales');\r\n\r\n    export const HistorialesIndex = new Index({\r\n        collection: Historiales,\r\n        fields: ['codigo_h', 'ci', 'nombre', 'ap_paterno'],\r\n        engine: new MinimongoEngine({\r\n            sort: () => { codigo_h: 1},\r\n            /*selector: function (searchObject, options, aggregation) {\r\n                let selector = this.defaultConfiguration().selector(searchObject, options, aggregation)\r\n                selector.asegurado = true\r\n                //selector.tipo_paciente = 'Titular'\r\n                return  selector\r\n            }*/\r\n        }),\r\n        defaultSearchOptions: {limit: 10}\r\n    });\r\n\r\n    //TABLA CONSULTAS\r\n    export const Consultas = new Mongo.Collection('Consultas');\r\n\r\n\r\n    // TABLA LABORATORIOS\r\n    export const Laboratorios = new Mongo.Collection('Laboratorios');\r\n\r\n    export const LaboratoriosIndex = new Index({\r\n        collection: Laboratorios,\r\n        fields: ['nomb_gral', 'nomb_analisis'],\r\n        engine: new MinimongoEngine({\r\n            sort: () => { nomb_gral: 1}\r\n        }),\r\n        defaultSearchOptions: {limit: 35}\r\n    });\r\n\r\n    // TABLA INTERNACIONES\r\n    export const Internaciones = new Mongo.Collection('Internaciones');\r\n\r\n    // TABLA QUIROFANO\r\n    export const Quirofano = new Mongo.Collection('Quirofano');\r\n\r\n    //TABAL SIGNOS VITALES\r\n    export const SignosVitales = new Mongo.Collection('SignosVitales');\r\n\r\n    //TABAL SALA PARTOS\r\n    export const SalaPartos = new Mongo.Collection('SalaPartos');\r\n\r\n//CONTABILIDAD\r\n    //PLAN DE CUENTAS\r\n    export const PlanCuentas = new Mongo.Collection('PlanCuentas');\r\n\r\n    //COMPROBANTES\r\n    export const Comprobantes = new Mongo.Collection('Comprobantes');\r\n\r\n    //MAYORES\r\n    export const Mayores = new Mongo.Collection('Mayores');\r\n\r\n    //ESTADOS FINANCIEROS\r\n    export const EstadosFinancieros = new Mongo.Collection('EstadosFinancieros');\r\n\r\n    //ESTADO CONTABILIDAD\r\n    export const EstadoConta = new Mongo.Collection('EstadoConta');\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { ValidateMethod } from 'meteor/mdg:validated-method';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\nimport { Cargos } from './collections.js';\r\n\r\nexport const insertCargo = new ValidatedMethod({\r\n    name: 'cargo.insert',\r\n    validate: new SimpleSchema({\r\n        nombre_cargo: {type: String},\r\n        descripcion_cargo: {type: String},\r\n        nro_usuarios: {type: Number},\r\n        color: {type: String}\r\n    }).validator (),\r\n    run ({nombre_cargo, descripcion_cargo, nro_usuarios, color }) {\r\n        return Cargos.insert({\r\n            nombre_cargo: nombre_cargo,\r\n            descripcion_cargo: descripcion_cargo,\r\n            nro_usuarios: nro_usuarios,\r\n            color: color\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateCargo = new ValidatedMethod({\r\n    name: 'cargo.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        nombre_cargo: {type: String},\r\n        descripcion_cargo: {type: String},\r\n        nro_usuarios: {type: Number},\r\n        color: {type: String}\r\n    }).validator (),\r\n    run ({id, nombre_cargo, descripcion_cargo, nro_usuarios, color }) {\r\n        return Cargos.update({\r\n            _id:id\r\n        },{\r\n            $set:{\r\n                nombre_cargo: nombre_cargo,\r\n                descripcion_cargo: descripcion_cargo,\r\n                nro_usuarios: nro_usuarios,\r\n                color: color\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateCargoNroUs = new ValidatedMethod({\r\n    name: 'cargo.updatenrous',\r\n    validate: new SimpleSchema({\r\n        nombre_cargo: {type: String},\r\n        nro_usuarios: {type: Number}\r\n    }).validator(),\r\n    run ({nombre_cargo, nro_usuarios}) {\r\n        return Cargos.update({\r\n            nombre_cargo: nombre_cargo\r\n        },{\r\n            $set:{\r\n                nro_usuarios: nro_usuarios\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nexport const removeCargo = new ValidatedMethod({\r\n    name: 'cargo.remove',\r\n    validate: new SimpleSchema({\r\n        id: {type: String}\r\n    }).validator (),\r\n    run ({id}) {\r\n        return Cargos.remove({\r\n            _id:id\r\n        });\r\n    }\r\n});\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { ValidateMethod } from 'meteor/mdg:validated-method';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\nimport { Comprobantes, EstadoConta } from './collections.js';\r\n\r\nexport const insertComprobante = new ValidatedMethod({\r\n    name: 'comprobante.insert',\r\n    validate: new SimpleSchema({\r\n        nro: {type: Number},\r\n        nro_comprobante: {type: String},\r\n        tipo_comprobante: {type: String},\r\n        dia: {type: String},\r\n        mes: {type: String},\r\n        a침o: {type: String},\r\n        nro_cheque: {type: String},\r\n        glosa: {type: String},\r\n        cuentas: {type: [Object]},\r\n        'cuentas.$.codigo_c': {type:String},\r\n        //'cuentas.$.nombre_c': {type:String},\r\n        'cuentas.$.debe': {type: String},\r\n        'cuentas.$.haber': {type: String},\r\n        total_debe: {type: String},\r\n        total_haber: {type: String},\r\n        fecha_reg: {type: Date}\r\n    }).validator(),\r\n    run({\r\n        nro,\r\n        nro_comprobante,\r\n        tipo_comprobante,\r\n        dia,\r\n        mes,\r\n        a침o,\r\n        nro_cheque,\r\n        glosa,\r\n        cuentas,\r\n        total_debe,\r\n        total_haber,\r\n        fecha_reg\r\n    }){\r\n        return Comprobantes.insert({\r\n            nro: nro,\r\n            nro_comprobante: nro_comprobante,\r\n            tipo_comprobante: tipo_comprobante,\r\n            dia: dia,\r\n            mes: mes,\r\n            a침o: a침o,\r\n            nro_cheque: nro_cheque,\r\n            glosa: glosa,\r\n            cuentas: cuentas,\r\n            total_debe: total_debe,\r\n            total_haber: total_haber,\r\n            fecha_reg: fecha_reg\r\n        });\r\n    }\r\n});\r\n\r\nexport const insertEstadoConta = new ValidatedMethod({\r\n    name: 'estadoconta.insert',\r\n    validate: new SimpleSchema({\r\n        abierto: {type: Boolean},\r\n        cerrado: {type: Boolean},\r\n        a침o: {type: String},\r\n    }).validator(),\r\n    run({\r\n        abierto,\r\n        cerrado,\r\n        a침o\r\n    }){\r\n        return EstadoConta.insert({\r\n            abierto: abierto,\r\n            cerrado: cerrado,\r\n            a침o: a침o\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateEstadoConta = new ValidatedMethod({\r\n    name: 'estadoconta.update',\r\n    validate: new SimpleSchema({\r\n        a침o: {type: String},\r\n        abierto: {type: Boolean},\r\n        cerrado: {type: Boolean},\r\n    }).validator (),\r\n    run ({\r\n        a침o,\r\n        abierto,\r\n        cerrado,\r\n    }) {\r\n        return EstadoConta.update({\r\n            a침o: a침o\r\n        },{\r\n            $set:{\r\n                abierto: abierto,\r\n                cerrado: cerrado,\r\n            }\r\n        });\r\n    }\r\n});\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { ValidateMethod } from 'meteor/mdg:validated-method';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\nimport { Consultorios } from './collections.js';\r\n\r\nexport const insertConsultorio = new ValidatedMethod({\r\n    name: 'consultorio.insert',\r\n    validate: new SimpleSchema({\r\n        imagen_cons: {type: String},\r\n        nombre_cons: {type: String},\r\n        codigo_cons: {type: String},\r\n        descripcion_cons: {type: String},\r\n        precio_aseg: {type: String},\r\n        precio_part: {type: String},\r\n\r\n        precio_aseg_recons: {type: String},\r\n        precio_part_recons: {type: String},\r\n        precio_aseg_emer: {type: String},\r\n        precio_part_emer: {type: String},\r\n\r\n        tiempo_consulta: {type: String},\r\n        turnos: {type: Boolean},\r\n        medico_cons: {type: [Object]},\r\n        'medico_cons.$.medico': {type: String},\r\n\r\n        sin_horario: {type: Boolean},\r\n\r\n        hora_ing_am: {type: String},\r\n        hora_sal_am: {type: String},\r\n        hora_ing_pm: {type: String},\r\n        hora_sal_pm: {type: String},\r\n        hora_ing_nc: {type: String},\r\n        hora_sal_nc: {type: String},\r\n\r\n        lunes_am: {type: Boolean},\r\n        martes_am: {type: Boolean},\r\n        miercoles_am: {type: Boolean},\r\n        jueves_am: {type: Boolean},\r\n        viernes_am: {type: Boolean},\r\n        sabado_am: {type: Boolean},\r\n\r\n        lunes_pm: {type: Boolean},\r\n        martes_pm: {type: Boolean},\r\n        miercoles_pm: {type: Boolean},\r\n        jueves_pm: {type: Boolean},\r\n        viernes_pm: {type: Boolean},\r\n        sabado_pm: {type: Boolean},\r\n\r\n        lunes_nc: {type: Boolean},\r\n        martes_nc: {type: Boolean},\r\n        miercoles_nc: {type: Boolean},\r\n        jueves_nc: {type: Boolean},\r\n        viernes_nc: {type: Boolean},\r\n        sabado_nc: {type: Boolean},\r\n    }).validator(),\r\n    run({\r\n        imagen_cons,\r\n        nombre_cons,\r\n        codigo_cons,\r\n        descripcion_cons,\r\n        precio_aseg,\r\n        precio_part,\r\n\r\n        precio_aseg_recons,\r\n        precio_part_recons,\r\n        precio_aseg_emer,\r\n        precio_part_emer,\r\n\r\n        tiempo_consulta,\r\n        turnos,\r\n        medico_cons,\r\n\r\n        sin_horario,\r\n\r\n        hora_ing_am,\r\n        hora_sal_am,\r\n        hora_ing_pm,\r\n        hora_sal_pm,\r\n        hora_ing_nc,\r\n        hora_sal_nc,\r\n\r\n        lunes_am,\r\n        martes_am,\r\n        miercoles_am,\r\n        jueves_am,\r\n        viernes_am,\r\n        sabado_am,\r\n\r\n        lunes_pm,\r\n        martes_pm,\r\n        miercoles_pm,\r\n        jueves_pm,\r\n        viernes_pm,\r\n        sabado_pm,\r\n\r\n        lunes_nc,\r\n        martes_nc,\r\n        miercoles_nc,\r\n        jueves_nc,\r\n        viernes_nc,\r\n        sabado_nc,\r\n    }){\r\n        return Consultorios.insert({\r\n            imagen_cons: imagen_cons,\r\n            nombre_cons: nombre_cons,\r\n            codigo_cons: codigo_cons,\r\n            descripcion_cons: descripcion_cons,\r\n            precio_aseg: precio_aseg,\r\n            precio_part: precio_part,\r\n\r\n            precio_aseg_recons: precio_aseg_recons,\r\n            precio_part_recons: precio_part_recons,\r\n            precio_aseg_emer: precio_aseg_emer,\r\n            precio_part_emer: precio_part_emer,\r\n\r\n            tiempo_consulta: tiempo_consulta,\r\n            turnos: turnos,\r\n            activo: true,\r\n            medico_cons: medico_cons,\r\n\r\n            sin_horario: sin_horario,\r\n\r\n            hora_ing_am: hora_ing_am,\r\n            hora_sal_am: hora_sal_am,\r\n            hora_ing_pm: hora_ing_pm,\r\n            hora_sal_pm: hora_sal_pm,\r\n            hora_ing_nc: hora_ing_nc,\r\n            hora_sal_nc:hora_sal_nc,\r\n\r\n            lunes_am: lunes_am,\r\n            martes_am: martes_am,\r\n            miercoles_am: miercoles_am,\r\n            jueves_am: jueves_am,\r\n            viernes_am: viernes_am,\r\n            sabado_am: sabado_am,\r\n\r\n            lunes_pm: lunes_pm,\r\n            martes_pm: martes_pm,\r\n            miercoles_pm: miercoles_pm,\r\n            jueves_pm: jueves_pm,\r\n            viernes_pm: viernes_pm,\r\n            sabado_pm: sabado_pm,\r\n\r\n            lunes_nc: lunes_nc,\r\n            martes_nc: martes_nc,\r\n            miercoles_nc: miercoles_nc,\r\n            jueves_nc: jueves_nc,\r\n            viernes_nc: viernes_nc,\r\n            sabado_nc: sabado_nc,\r\n        });\r\n    }\r\n});\r\n\r\nexport const removeConsultorio = new ValidatedMethod({\r\n    name: 'remove.consultorio',\r\n    validate: new SimpleSchema({\r\n        id: {type: String}\r\n    }).validator(),\r\n    run({id}){\r\n        return Consultorios.remove({_id: id})\r\n    }\r\n});\r\n\r\nexport const updateConsultorio = new ValidatedMethod({\r\n    name: 'consultorio.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        imagen_cons: {type: String},\r\n        nombre_cons: {type: String},\r\n        codigo_cons: {type: String},\r\n        descripcion_cons: {type: String},\r\n        precio_aseg: {type: String},\r\n        precio_part: {type: String},\r\n\r\n        precio_aseg_recons: {type: String},\r\n        precio_part_recons: {type: String},\r\n        precio_aseg_emer: {type: String},\r\n        precio_part_emer: {type: String},\r\n\r\n        tiempo_consulta: {type: String},\r\n        turnos: {type: Boolean},\r\n        medico_cons: {type: [Object]},\r\n        'medico_cons.$.medico': {type: String},\r\n\r\n        sin_horario: {type: Boolean},\r\n\r\n        hora_ing_am: {type: String},\r\n        hora_sal_am: {type: String},\r\n        hora_ing_pm: {type: String},\r\n        hora_sal_pm: {type: String},\r\n        hora_ing_nc: {type: String},\r\n        hora_sal_nc: {type: String},\r\n\r\n        lunes_am: {type: Boolean},\r\n        martes_am: {type: Boolean},\r\n        miercoles_am: {type: Boolean},\r\n        jueves_am: {type: Boolean},\r\n        viernes_am: {type: Boolean},\r\n        sabado_am: {type: Boolean},\r\n\r\n        lunes_pm: {type: Boolean},\r\n        martes_pm: {type: Boolean},\r\n        miercoles_pm: {type: Boolean},\r\n        jueves_pm: {type: Boolean},\r\n        viernes_pm: {type: Boolean},\r\n        sabado_pm: {type: Boolean},\r\n\r\n        lunes_nc: {type: Boolean},\r\n        martes_nc: {type: Boolean},\r\n        miercoles_nc: {type: Boolean},\r\n        jueves_nc: {type: Boolean},\r\n        viernes_nc: {type: Boolean},\r\n        sabado_nc: {type: Boolean},\r\n    }).validator(),\r\n    run({\r\n        id,\r\n        imagen_cons,\r\n        nombre_cons,\r\n        codigo_cons,\r\n        descripcion_cons,\r\n        precio_aseg,\r\n        precio_part,\r\n\r\n        precio_aseg_recons,\r\n        precio_part_recons,\r\n        precio_aseg_emer,\r\n        precio_part_emer,\r\n\r\n        tiempo_consulta,\r\n        turnos,\r\n        medico_cons,\r\n\r\n        sin_horario,\r\n\r\n        hora_ing_am,\r\n        hora_sal_am,\r\n        hora_ing_pm,\r\n        hora_sal_pm,\r\n        hora_ing_nc,\r\n        hora_sal_nc,\r\n\r\n        lunes_am,\r\n        martes_am,\r\n        miercoles_am,\r\n        jueves_am,\r\n        viernes_am,\r\n        sabado_am,\r\n\r\n        lunes_pm,\r\n        martes_pm,\r\n        miercoles_pm,\r\n        jueves_pm,\r\n        viernes_pm,\r\n        sabado_pm,\r\n\r\n        lunes_nc,\r\n        martes_nc,\r\n        miercoles_nc,\r\n        jueves_nc,\r\n        viernes_nc,\r\n        sabado_nc,\r\n    }){\r\n        return Consultorios.update({\r\n            _id: id\r\n        },{\r\n            $set:{\r\n                imagen_cons: imagen_cons,\r\n                nombre_cons: nombre_cons,\r\n                codigo_cons: codigo_cons,\r\n                descripcion_cons: descripcion_cons,\r\n                precio_aseg: precio_aseg,\r\n                precio_part: precio_part,\r\n\r\n                precio_aseg_recons: precio_aseg_recons,\r\n                precio_part_recons: precio_part_recons,\r\n                precio_aseg_emer: precio_aseg_emer,\r\n                precio_part_emer: precio_part_emer,\r\n\r\n                tiempo_consulta: tiempo_consulta,\r\n                turnos: turnos,\r\n                medico_cons: medico_cons,\r\n\r\n                sin_horario: sin_horario,\r\n\r\n                hora_ing_am: hora_ing_am,\r\n                hora_sal_am: hora_sal_am,\r\n                hora_ing_pm: hora_ing_pm,\r\n                hora_sal_pm: hora_sal_pm,\r\n                hora_ing_nc: hora_ing_nc,\r\n                hora_sal_nc:hora_sal_nc,\r\n\r\n                lunes_am: lunes_am,\r\n                martes_am: martes_am,\r\n                miercoles_am: miercoles_am,\r\n                jueves_am: jueves_am,\r\n                viernes_am: viernes_am,\r\n                sabado_am: sabado_am,\r\n\r\n                lunes_pm: lunes_pm,\r\n                martes_pm: martes_pm,\r\n                miercoles_pm: miercoles_pm,\r\n                jueves_pm: jueves_pm,\r\n                viernes_pm: viernes_pm,\r\n                sabado_pm: sabado_pm,\r\n\r\n                lunes_nc: lunes_nc,\r\n                martes_nc: martes_nc,\r\n                miercoles_nc: miercoles_nc,\r\n                jueves_nc: jueves_nc,\r\n                viernes_nc: viernes_nc,\r\n                sabado_nc: sabado_nc,\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateActivConsultorio = new ValidatedMethod({\r\n    name: 'activconsultorio.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        activo: {type: Boolean}\r\n    }).validator(),\r\n    run({\r\n        id,\r\n        activo\r\n    }){\r\n        return Consultorios.update({\r\n            _id: id\r\n        },{\r\n            $set:{\r\n                activo: activo\r\n            }\r\n        });\r\n    }\r\n});\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { ValidateMethod } from 'meteor/mdg:validated-method';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\nimport { Empresas } from './collections.js';\r\n\r\nexport const insertEmpresa = new ValidatedMethod({\r\n    name: 'empresa.insert',\r\n    validate: new SimpleSchema({\r\n        nit: {type: String},\r\n        nombre_empresa: {type: String},\r\n        logo: {type: String},\r\n        registrado_por: {type: String},\r\n        fecha_reg: {type: Date}\r\n    }).validator (),\r\n    run ({nit, nombre_empresa, logo, registrado_por, fecha_reg }) {\r\n        return Empresas.insert({\r\n            nit: nit,\r\n            nombre_empresa: nombre_empresa,\r\n            logo: logo,\r\n            registrado_por: registrado_por,\r\n            fecha_reg: fecha_reg\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateEmpresa = new ValidatedMethod({\r\n    name: 'empresa.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        nit: {type: String},\r\n        nombre_empresa: {type: String},\r\n        logo: {type: String}\r\n    }).validator (),\r\n    run ({id, nit, nombre_empresa, logo }) {\r\n        return Empresas.update({\r\n            _id:id\r\n        },{\r\n            $set:{\r\n                nit: nit,\r\n                nombre_empresa: nombre_empresa,\r\n                logo: logo\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nexport const removeEmpresa = new ValidatedMethod({\r\n    name: 'empresa.remove',\r\n    validate: new SimpleSchema({\r\n        id: {type: String}\r\n    }).validator (),\r\n    run ({id}) {\r\n        return Empresas.remove({\r\n            _id:id\r\n        });\r\n    }\r\n});\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { ValidateMethod } from 'meteor/mdg:validated-method';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\nimport { EstadosFinancieros } from './collections.js';\r\n\r\nexport const insertEstadoFinanciero = new ValidatedMethod({\r\n    name: 'estadofinanciero.insert',\r\n    validate: new SimpleSchema({\r\n        codigo_cuenta: {type: String},\r\n        tipo: {type: String},\r\n        nivel: {type: String},\r\n        gestion: {type: String},\r\n        saldo: {type: String},\r\n    }).validator (),\r\n    run ({\r\n        codigo_cuenta,\r\n        tipo,\r\n        nivel,\r\n        gestion,\r\n        saldo\r\n    }) {\r\n        return EstadosFinancieros.insert({\r\n            codigo_cuenta: codigo_cuenta,\r\n            tipo: tipo,\r\n            nivel: nivel,\r\n            gestion: gestion,\r\n            saldo: saldo,\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateEstadoFinanciero = new ValidatedMethod({\r\n    name: 'estadofinanciero.update',\r\n    validate: new SimpleSchema({\r\n        codigo_cuenta: {type: String},\r\n        gestion: {type: String},\r\n        saldo: {type: String},\r\n    }).validator (),\r\n    run ({\r\n        codigo_cuenta,\r\n        gestion,\r\n        saldo\r\n    }) {\r\n        return EstadosFinancieros.update({\r\n            codigo_cuenta: codigo_cuenta,\r\n            gestion: gestion\r\n        },{\r\n            $set:{\r\n                saldo: saldo\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nexport const removeEstadoFinanciero = new ValidatedMethod({\r\n    name: 'estadofinanciero.remove',\r\n    validate: new SimpleSchema({\r\n        codigo_cuenta: {type: String}\r\n    }).validator (),\r\n    run ({codigo_cuenta}) {\r\n        return EstadosFinancieros.remove({\r\n            codigo_cuenta: codigo_cuenta\r\n        });\r\n    }\r\n});\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { ValidateMethod } from 'meteor/mdg:validated-method';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\nimport { Fichas, FichasEnfermeria, ReporteFichas, FichaInternacion, DetalleFicha } from './collections.js';\r\n\r\nexport const insertFicha = new ValidatedMethod({\r\n    name: 'ficha.insert',\r\n    validate: new SimpleSchema({\r\n        nro: {type: String},\r\n        hora_cons: {type: String},\r\n        consultorio: {type: String},\r\n        medico: {type: String, optional: true},\r\n        estado: {type: String},\r\n        tipo: {type: String},\r\n        fecha_cons: {type: String},\r\n        turno: {type: String, optional: true},\r\n        precio: {type: String},\r\n        paciente: {type: String},\r\n        asegurado: {type: Boolean, optional: true},\r\n        empleador: {type: String, optional: true},\r\n        tipo_consulta: {type: String, optional: true},\r\n        por: {type: String, optional: true},\r\n        en_fech: {type: String, optional: true},\r\n    }).validator(),\r\n    run({\r\n        nro,\r\n        hora_cons,\r\n        consultorio,\r\n        medico,\r\n        estado,\r\n        tipo,\r\n        fecha_cons,\r\n        turno,\r\n        precio,\r\n        paciente,\r\n        asegurado,\r\n        empleador,\r\n        tipo_consulta,\r\n        por,\r\n        en_fech\r\n    }){\r\n        /*console.log(fecha_cons.substr(0,2));\r\n        console.log(fecha_cons.substr(3,2));\r\n        console.log(fecha_cons.substr(6,4));*/\r\n        return Fichas.insert({\r\n            nro: nro,\r\n            hora_cons: hora_cons,\r\n            consultorio: consultorio,\r\n            medico: medico,\r\n            estado: estado,\r\n            tipo: tipo,\r\n            fecha_cons: fecha_cons,\r\n            dia: fecha_cons.substr(0, 2),\r\n            mes: fecha_cons.substr(3, 2),\r\n            a침o: fecha_cons.substr(6, 4),\r\n            turno: turno,\r\n            precio: precio,\r\n            paciente: paciente,\r\n            asegurado: asegurado,\r\n            empleador: empleador,\r\n            tipo_consulta: tipo_consulta,\r\n            por: por,\r\n            en_fech: new Date(),\r\n            reportado: false,\r\n            historia_llena: false\r\n        });\r\n    }\r\n});\r\n\r\nexport const ventaFicha = new ValidatedMethod({\r\n    name: 'ficha.venta',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        estado: {type: String},\r\n        precio: {type: String},\r\n        paciente: {type: String},\r\n        asegurado: {type: Boolean, optional: true},\r\n        empleador: {type: String, optional: true},\r\n        tipo_consulta: {type: String, optional: true},\r\n        por: {type: String, optional: true},\r\n        en_fech: {type: String, optional: true},\r\n    }).validator(),\r\n    run({\r\n        id,\r\n        estado,\r\n        precio,\r\n        paciente,\r\n        asegurado,\r\n        empleador,\r\n        tipo_consulta,\r\n        por,\r\n        en_fech\r\n    }){\r\n        return Fichas.update({\r\n                _id:id\r\n            },{\r\n                $set:{\r\n                    estado: estado,\r\n                    precio: precio,\r\n                    paciente: paciente,\r\n                    asegurado: asegurado,\r\n                    empleador: empleador,\r\n                    tipo_consulta: tipo_consulta,\r\n                    por: por,\r\n                    en_fech: new Date(),\r\n                    reportado: false,\r\n                    historia_llena: false\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateEstadoFicha = new ValidatedMethod({\r\n    name: 'estadoficha.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        medico: {type: String, optional: true},\r\n        estado: {type: String},\r\n        precio: {type: String},\r\n        tipo_consulta: {type: String, optional: true},\r\n        por: {type: String, optional: true},\r\n        en_fech: {type: String, optional: true},\r\n    }).validator(),\r\n    run({id, medico, estado, precio, tipo_consulta, por, en_fech}){\r\n        return Fichas.update({\r\n                _id:id\r\n            },{\r\n                $set:{\r\n                    medico: medico,\r\n                    estado: estado,\r\n                    precio: precio,\r\n                    tipo_consulta: tipo_consulta,\r\n                    por: por,\r\n                    en_fech: new Date(),\r\n                    reportado: false\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateMedFicha = new ValidatedMethod({\r\n    name: 'medficha.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        medico: {type: String},\r\n        precio: {type: String},\r\n        tipo_consulta: {type: String}\r\n    }).validator(),\r\n    run({id, medico, precio, tipo_consulta}){\r\n        return Fichas.update({\r\n                _id: id\r\n            },{\r\n                $set:{\r\n                    medico: medico,\r\n                    precio: precio,\r\n                    tipo_consulta: tipo_consulta\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateEstadoFichaMed = new ValidatedMethod({\r\n    name: 'estadofichamed.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        estado: {type: String},\r\n    }).validator(),\r\n    run({id, estado}){\r\n        return Fichas.update({\r\n                _id: id\r\n            },{\r\n                $set: {\r\n                    estado: estado,\r\n                    //por: por,\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateHistLlenaFichaMed = new ValidatedMethod({\r\n    name: 'histllenafichamed.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n    }).validator(),\r\n    run({id}){\r\n        return Fichas.update({\r\n                _id: id\r\n            },{\r\n                $set: {\r\n                    historia_llena: true,\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateElimFicha = new ValidatedMethod({\r\n    name: 'elimficha.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        estado: {type: String},\r\n    }).validator(),\r\n    run({id, estado}){\r\n        return Fichas.update({\r\n                _id:id\r\n            },{\r\n                $set:{\r\n                    tipo_consulta: '',\r\n                    estado: estado,\r\n                    precio: '0.00',\r\n                    paciente: estado,\r\n                    reportado: false\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\n// REPORTE FICHAS\r\nexport const insertReporteFicha = new ValidatedMethod({\r\n    name: 'reporteficha.insert',\r\n    validate: new SimpleSchema({\r\n        codigo_reporte: {type: String},\r\n        fecha_reporte: {type: String},\r\n        hora_reporte: {type: String},\r\n        reporte_enviado: {type: Boolean},\r\n        us_env: {type: String},\r\n        total: {type: String},\r\n        reporte_recibido: {type: Boolean},\r\n\r\n        dia_rec: {type: String},\r\n        mes_rec: {type: String},\r\n        a침o_rec: {type: String},\r\n        //fecha_recibido: {type: String},\r\n        hora_recibido: {type: String},\r\n        us_rec: {type: String , optional: true},\r\n    }).validator(),\r\n    run({\r\n        codigo_reporte,\r\n        fecha_reporte,\r\n        hora_reporte,\r\n        reporte_enviado,\r\n        us_env,\r\n        total,\r\n        reporte_recibido,\r\n        dia_rec,\r\n        mes_rec,\r\n        a침o_rec,\r\n        //fecha_recibido,\r\n        hora_recibido,\r\n        us_rec,\r\n    }){\r\n        return [\r\n            ReporteFichas.insert({\r\n                codigo_reporte: codigo_reporte,\r\n                fecha_reporte: fecha_reporte,\r\n\r\n                dia_env: fecha_reporte.substr(0, 2),\r\n                mes_env: fecha_reporte.substr(3, 2),\r\n                a침o_env: fecha_reporte.substr(6, 4),\r\n\r\n                hora_reporte: hora_reporte,\r\n                reporte_enviado: reporte_enviado,\r\n                us_env: us_env,\r\n                total: total,\r\n                reporte_recibido: reporte_recibido,\r\n                fecha_recibido: '',\r\n                dia_rec: dia_rec,\r\n                mes_rec: mes_rec,\r\n                a침o_rec: a침o_rec,\r\n                //fecha_recibido: fecha_recibido,\r\n                hora_recibido: hora_recibido,\r\n                us_rec: us_rec,\r\n                fecha_reg: new Date()\r\n            }),\r\n            Fichas.update({\r\n                por: us_env,\r\n                reportado: false,\r\n                $and:[\r\n                    {estado: {$ne: 'Libre'}},\r\n                    {estado: {$ne: 'Reservado'}},\r\n                    {estado: {$ne: 'Eliminado'}}\r\n                ]\r\n                },{\r\n                    $set: {\r\n                        reportado: true,\r\n                        codigo_reporte: codigo_reporte\r\n                    }\r\n            },{\r\n                multi:true\r\n            }),\r\n            FichasEnfermeria.update({\r\n                por: us_env,\r\n                reportado: false,\r\n                //fin_consulta: true,\r\n                pagado: true,\r\n                $and:[\r\n                    {estado: {$ne: 'Eliminado'}}\r\n                ]\r\n                },{\r\n                    $set: {\r\n                        reportado: true,\r\n                        codigo_reporte: codigo_reporte\r\n                    }\r\n            },{\r\n                multi:true\r\n            })\r\n        ];\r\n    }\r\n});\r\n\r\nexport const updateReporteFicha = new ValidatedMethod({\r\n    name: 'reporteficha.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        reporte_recibido: {type: Boolean},\r\n        dia_rec: {type: String},\r\n        mes_rec: {type: String},\r\n        a침o_rec: {type: String},\r\n        //fecha_recibido: {type: String},\r\n        hora_recibido: {type: String},\r\n        us_rec: {type: String , optional: true},\r\n    }).validator(),\r\n    run({\r\n        id,\r\n        reporte_recibido,\r\n        dia_rec,\r\n        mes_rec,\r\n        a침o_rec,\r\n        //fecha_recibido,\r\n        hora_recibido,\r\n        us_rec,\r\n    }){\r\n        return ReporteFichas.update({\r\n                _id: id\r\n            },{\r\n                $set:{\r\n                    reporte_recibido: reporte_recibido,\r\n                    dia_rec: dia_rec,\r\n                    mes_rec: mes_rec,\r\n                    a침o_rec: a침o_rec,\r\n                    fecha_recibido: dia_rec + '/' + mes_rec + '/' + a침o_rec,\r\n                    hora_recibido: hora_recibido,\r\n                    us_rec: us_rec,\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\n\r\n// FICHAJE DE ENFERMERIA\r\nexport const insertFichaFarmacia = new ValidatedMethod({\r\n    name: 'fichafarmacia.insert',\r\n    validate: new SimpleSchema({\r\n        nro: {type: String},\r\n        hora_cons: {type: String},\r\n        consultorio: {type: String},\r\n        //medico: {type: String, optional: true},\r\n        estado: {type: String},\r\n        //tipo: {type: String},\r\n        fecha_cons: {type: String},\r\n        //turno: {type: String, optional: true},\r\n        precio: {type: String},\r\n        paciente: {type: String},\r\n        asegurado: {type: Boolean, optional: true},\r\n        empleador: {type: String},\r\n        diagnostico: {type: [String]},\r\n\r\n        /*detalle_diag: {type: [Object]},\r\n        'detalle_diag.$.nombre_diag': {type:String},\r\n        'detalle_diag.$.precio_diag': {type: String},\r\n        'detalle_diag.$.pagado_diag': {type: Boolean},*/\r\n\r\n\r\n        /*inyectable_iv: {type: String, optional: true},\r\n        pago_iny_iv: {type: String, optional: true},\r\n\r\n        inyectable_im: {type: String, optional: true},\r\n        pago_iny_im: {type: String, optional: true},\r\n\r\n        curaciones: {type: String, optional: true},\r\n        pago_curaciones: {type: String, optional: true},\r\n\r\n        sueros: {type: String, optional: true},\r\n        pago_sueros: {type: String, optional: true},\r\n\r\n        suturas: {type: String, optional: true},\r\n        pago_suturas: {type: String, optional: true},\r\n\r\n        oxigeno: {type: String, optional: true},\r\n        pago_oxigeno: {type: String, optional: true},\r\n\r\n        u침ero: {type: String, optional: true},\r\n        pago_u침ero: {type: String, optional: true},\r\n\r\n        enema: {type: String, optional: true},\r\n        pago_enema: {type: String, optional: true},\r\n\r\n        p_art: {type: String, optional: true},\r\n        pago_p_art: {type: String, optional: true},\r\n\r\n        sonda: {type: String, optional: true},\r\n        pago_sonda: {type: String, optional: true},\r\n\r\n        otros: {type: String, optional: true},\r\n        pago_otros: {type: String, optional: true},*/\r\n\r\n        /*cuentas: {type: [Object]},\r\n        'cuentas.$.codigo_c': {type:String},\r\n        'cuentas.$.debe': {type: String},\r\n        'cuentas.$.haber': {type: String},*/\r\n\r\n\r\n\r\n        tipo_consulta: {type: String, optional: true},\r\n        por: {type: String, optional: true},\r\n        en_fech: {type: String, optional: true},\r\n    }).validator(),\r\n    run({\r\n        nro,\r\n        hora_cons,\r\n        consultorio,\r\n        //medico,\r\n        estado,\r\n        //tipo,\r\n        fecha_cons,\r\n        //turno,\r\n        precio,\r\n        paciente,\r\n        asegurado,\r\n        empleador,\r\n        diagnostico,\r\n        tipo_consulta,\r\n        por,\r\n        en_fech\r\n    }){\r\n        return FichasEnfermeria.insert({\r\n            nro: nro,\r\n            hora_cons: hora_cons,\r\n            consultorio: consultorio,\r\n            //medico: medico,\r\n            estado: estado,\r\n\r\n            fin_consulta: false,\r\n            //tipo: tipo,\r\n            fecha_cons: fecha_cons,\r\n            dia: fecha_cons.substr(0, 2),\r\n            mes: fecha_cons.substr(3, 2),\r\n            a침o: fecha_cons.substr(6, 4),\r\n            //turno: turno,\r\n            precio: precio,\r\n            pagado: false,\r\n            paciente: paciente,\r\n            asegurado: asegurado,\r\n            empleador: empleador,\r\n            diagnostico: diagnostico,\r\n            tipo_consulta: tipo_consulta,\r\n            por: por,\r\n            en_fech: new Date(),\r\n            reportado: false\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateElimFichaFarm = new ValidatedMethod({\r\n    name: 'elimfichafarm.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        estado: {type: String},\r\n    }).validator(),\r\n    run({id, estado}){\r\n        return FichasEnfermeria.update({\r\n                _id:id\r\n            },{\r\n                $set:{\r\n                    tipo_consulta: '',\r\n                    estado: estado,\r\n                    diagnostico: [],\r\n                    precio: '0.00',\r\n                    paciente: estado,\r\n                    reportado: false\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateFichaFarmacia = new ValidatedMethod({\r\n    name: 'fichafarmacia.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n\r\n        diagnostico: {type: [String]},\r\n        tipo_consulta: {type: String, optional: true},\r\n    }).validator(),\r\n    run({\r\n        id,\r\n        diagnostico,\r\n        tipo_consulta,\r\n    }){\r\n        return FichasEnfermeria.update({\r\n                _id:id\r\n            },{\r\n                $set:{\r\n                    diagnostico: diagnostico,\r\n                    tipo_consulta: tipo_consulta,\r\n                    precio: '0.00',\r\n                    pagado: false,\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateEstadoFichaEnf = new ValidatedMethod({\r\n    name: 'estadofichaenf.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        estado: {type: String},\r\n    }).validator(),\r\n    run({id, estado}){\r\n        return FichasEnfermeria.update({\r\n                _id: id\r\n            },{\r\n                $set: {\r\n                    estado: estado,\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateFinConsFichaEnf = new ValidatedMethod({\r\n    name: 'finconsfichaenf.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        fin_consulta: {type: Boolean},\r\n    }).validator(),\r\n    run({id, fin_consulta}){\r\n        return FichasEnfermeria.update({\r\n                _id: id\r\n            },{\r\n                $set: {\r\n                    fin_consulta: fin_consulta\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updatePrecioFichaEnf = new ValidatedMethod({\r\n    name: 'preciofichaenf.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        precio: {type: String},\r\n    }).validator(),\r\n    run({id, precio}){\r\n        return FichasEnfermeria.update({\r\n                _id: id\r\n            },{\r\n                $set: {\r\n                    precio: precio,\r\n                    pagado: true,\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const insertDetalleFicha = new ValidatedMethod({\r\n    name: 'detalleficha.insert',\r\n    validate: new SimpleSchema({\r\n        id_ficha: {type: String},\r\n        nombre_diag: {type:String},\r\n        precio_diag: {type: String},\r\n        pagado_diag: {type: Boolean},\r\n        fecha_cons: {type: String},\r\n    }).validator(),\r\n    run({\r\n        id_ficha,\r\n        nombre_diag,\r\n        precio_diag,\r\n        pagado_diag,\r\n        fecha_cons,\r\n    }){\r\n        return DetalleFicha.insert({\r\n            id_ficha: id_ficha,\r\n            nombre_diag: nombre_diag,\r\n            precio_diag: precio_diag,\r\n            pagado_diag: pagado_diag,\r\n\r\n            fecha_cons: fecha_cons,\r\n            dia: fecha_cons.substr(0, 2),\r\n            mes: fecha_cons.substr(3, 2),\r\n            a침o: fecha_cons.substr(6, 4),\r\n            fecha_reg: new Date(),\r\n        });\r\n    }\r\n});\r\n\r\nexport const updatePrecioDetalleFicha = new ValidatedMethod({\r\n    name: 'preciodetalleficha.update',\r\n    validate: new SimpleSchema({\r\n        id_ficha: {type: String},\r\n        nombre_diag: {type:String},\r\n        precio_diag: {type: String},\r\n        pagado_diag: {type: Boolean},\r\n    }).validator(),\r\n    run({\r\n        id_ficha,\r\n        nombre_diag,\r\n        precio_diag,\r\n        pagado_diag,\r\n    }){\r\n        return DetalleFicha.update({\r\n            id_ficha: id_ficha,\r\n            nombre_diag: nombre_diag,\r\n            },{\r\n                $set: {\r\n                    precio_diag: precio_diag,\r\n                    pagado_diag: pagado_diag,\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const removeDetalleFicha = new ValidatedMethod({\r\n    name: 'detalleficha.remove',\r\n    validate: new SimpleSchema({\r\n        id_ficha: {type: String},\r\n        nombre_diag: {type: String},\r\n    }).validator (),\r\n    run ({\r\n        id_ficha,\r\n        nombre_diag,\r\n    }) {\r\n        return DetalleFicha.remove({\r\n            id_ficha: id_ficha,\r\n            nombre_diag: nombre_diag,\r\n        });\r\n    }\r\n});\r\n\r\nexport const removeAllDetalleFicha = new ValidatedMethod({\r\n    name: 'detallefichaall.remove',\r\n    validate: new SimpleSchema({\r\n        id_ficha: {type: String},\r\n    }).validator (),\r\n    run ({\r\n        id_ficha,\r\n    }) {\r\n        return DetalleFicha.remove({\r\n            id_ficha: id_ficha,\r\n        });\r\n    }\r\n});\r\n\r\n//FICHA INTERNACION\r\nexport const insertFichaInternacion = new ValidatedMethod({\r\n    name: 'fichainternacion.insert',\r\n    validate: new SimpleSchema({\r\n        codigo_internacion: {type: String},\r\n\r\n        id_paciente: {type: String},\r\n        id_servicio: {type: String},\r\n        servicio: {type: String},\r\n        detalle: {type: String},\r\n        dia: {type: String},\r\n        mes: {type: String},\r\n        a침o: {type: String},\r\n    }).validator(),\r\n    run({\r\n        codigo_internacion,\r\n\r\n        id_paciente,\r\n        id_servicio,\r\n        servicio,\r\n        detalle,\r\n        dia,\r\n        mes,\r\n        a침o,\r\n    }){\r\n        return FichaInternacion.insert({\r\n            codigo_internacion: codigo_internacion,\r\n            id_paciente: id_paciente,\r\n            id_servicio: id_servicio,\r\n            servicio: servicio,\r\n            detalle: detalle,\r\n            dia: dia,\r\n            mes: mes,\r\n            a침o: a침o,\r\n            monto: '0.00',\r\n            pagado: false,\r\n            fecha_reg: new Date()\r\n        });\r\n    }\r\n});\r\n\r\nexport const updatePrecioFichaInternacion = new ValidatedMethod({\r\n    name: 'preciofichainternacion.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        monto: {type: String},\r\n        factura: {type: String}\r\n    }).validator(),\r\n    run({id, monto, factura}){\r\n        return FichaInternacion.update({\r\n                _id: id\r\n            },{\r\n                $set: {\r\n                    monto: monto,\r\n                    factura: factura,\r\n                    pagado: true,\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateReporteFichaInternacion = new ValidatedMethod({\r\n    name: 'reportefichainternacion.update',\r\n    validate: new SimpleSchema({\r\n        codigo_internacion: {type: String},\r\n        por: {type: String},\r\n    }).validator(),\r\n    run({codigo_internacion, por}){\r\n        return FichaInternacion.update({\r\n                codigo_internacion: codigo_internacion\r\n            },{\r\n                $set: {\r\n                    por: por,\r\n                    reportado: false,\r\n                }\r\n        },{\r\n            multi:true\r\n        });\r\n    }\r\n});\r\n\r\nexport const removeFichaInternacion = new ValidatedMethod({\r\n    name: 'fichainternacion.remove',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n    }).validator(),\r\n    run({id}){\r\n        return FichaInternacion.remove({_id: id});\r\n    }\r\n});\r\n\r\n/*\r\nexport const insertReceta = new ValidatedMethod({\r\n    name: 'receta.insert',\r\n    validate: new SimpleSchema({\r\n        ficha_id: {type: String},\r\n        medicamento: {type: String},\r\n        cantidad: {type: String},\r\n        uso: {type: String},\r\n    }).validator(),\r\n    run({\r\n        ficha_id,\r\n        medicamento,\r\n        cantidad,\r\n        uso,\r\n    }){\r\n        return Consultas.update({\r\n            ficha_id: ficha_id\r\n        },{\r\n            $push: {\r\n                tratamiento: {\r\n                    medicamento: medicamento,\r\n                    cantidad: cantidad,\r\n                    uso: uso\r\n                }\r\n            }\r\n        });\r\n    }\r\n});\r\n*/\r\n\r\n/*\r\n    var fecha=new Date();\r\n\r\n\t// Cogemos la fecha actual en formato milisegundos desde 1/1/1970 y le\r\n\t// restamos tantos milisegundos como tiene un dia.\r\n\tvar ayer=new Date(fecha.getTime() - 24*60*60*1000);\r\n\r\n\t// Sumamos los milisegundos que tiene un dia\r\n\tvar manana=new Date(fecha.getTime() + 24*60*60*1000);\r\n\r\n\tdocument.write(\"<br>La Fecha de hoy es: \"+fecha.getDate()+\"/\"+fecha.getMonth()+\"/\"+fecha.getFullYear());\r\n\r\n\tdocument.write(\"<br>La Fecha de ayer es: \"+ayer.getDate()+\"/\"+ayer.getMonth()+\"/\"+ayer.getFullYear());\r\n\r\n\tdocument.write(\"<br>La Fecha de ma침ana es: \"+manana.getDate()+\"/\"+manana.getMonth()+\"/\"+manana.getFullYear());\r\n*/\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { ValidateMethod } from 'meteor/mdg:validated-method';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\nimport { Historiales, Consultas, Internaciones, Quirofano, Diagnostico, SignosVitales, SalaPartos } from './collections.js';\r\n\r\nexport const createHistorial = new ValidatedMethod({\r\n    name: 'historial.create',\r\n    validate: new SimpleSchema({\r\n        codigo_h: {type: String},\r\n        id_paciente: {type: String},\r\n\r\n        ci: {type: String},\r\n        nombre: {type: String},\r\n        ap_paterno: {type: String},\r\n        ap_materno: {type: String},\r\n\r\n        //fecha_creacion: {type: Date},\r\n        reg_por: {type: String},\r\n    }).validator(),\r\n    run({\r\n        codigo_h,\r\n        id_paciente,\r\n\r\n        ci,\r\n        nombre,\r\n        ap_paterno,\r\n        ap_materno,\r\n\r\n        //fecha_creacion,\r\n        reg_por\r\n    }){\r\n        return Historiales.insert({\r\n            codigo_h: codigo_h,\r\n            id_paciente: id_paciente,\r\n\r\n            ci: ci,\r\n            nombre: nombre,\r\n            ap_paterno: ap_paterno,\r\n            ap_materno: ap_materno,\r\n\r\n            fecha_creacion: new Date(),//fecha_creacion,\r\n            reg_por: reg_por\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateHistorial = new ValidatedMethod({\r\n    name: 'historial.update',\r\n    validate: new SimpleSchema({\r\n        codigo_h: {type: String},\r\n        id_paciente: {type: String},\r\n\r\n        ci: {type: String},\r\n        nombre: {type: String},\r\n        ap_paterno: {type: String},\r\n        ap_materno: {type: String},\r\n    }).validator(),\r\n    run({\r\n        codigo_h,\r\n        id_paciente,\r\n\r\n        ci,\r\n        nombre,\r\n        ap_paterno,\r\n        ap_materno,\r\n    }){\r\n        return Historiales.update({\r\n                codigo_h: codigo_h,\r\n                id_paciente: id_paciente,\r\n            },{\r\n                $set:{\r\n                    ci: ci,\r\n                    nombre: nombre,\r\n                    ap_paterno: ap_paterno,\r\n                    ap_materno: ap_materno,\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\n/////////////////// CONSULTAS /////////////////////\r\n\r\nexport const insertConsulta = new ValidatedMethod({\r\n    name: 'consulta.insert',\r\n    validate: new SimpleSchema({\r\n        codigo_h: {type: String},\r\n        id_paciente: {type: String},\r\n\r\n        ci: {type: String},\r\n        nombre: {type: String},\r\n        ap_paterno: {type: String},\r\n        ap_materno: {type: String},\r\n\r\n        sexo: {type: String},\r\n        asegurado: {type: Boolean},\r\n\r\n        edad: {type: Number},\r\n        tipo_edad: {type: String},\r\n\r\n        domicilio: {type: String},\r\n        ocupacion: {type: String},\r\n\r\n        ficha_id: {type: String},\r\n        nro_ficha: {type: String},\r\n        fecha_consulta: {type: String},\r\n        hora_consulta: {type: String},\r\n        consultorio: {type: String},\r\n        medico: {type: String},\r\n        tipo_consulta: {type: String},\r\n\r\n        pre_art: {type: Number},\r\n        frec_card: {type: Number},\r\n        frec_resp: {type: Number},\r\n        temperatura: {type: Number},\r\n        gestas: {type: Number},\r\n        para: {type: Number},\r\n        abortos: {type: Number},\r\n        cesareas: {type: Number},\r\n        fum: {type: String},\r\n        motivo_consulta: {type: String},\r\n        enfermedad_actual: {type: String},\r\n        ant_patologicos: {type: String},\r\n        examen_fisico: {type: String},\r\n        diagnostico: {type: String},\r\n        /*diagnostico: {type: [Object]},\r\n        'diagnostico.$.nom_diagnostico': {type: String},*/\r\n\r\n        tratamiento: {type: [Object]},\r\n        'tratamiento.$.medicamento' : {type: String},\r\n        'tratamiento.$.cantidad' : {type: String},\r\n        'tratamiento.$.uso' : {type: String},\r\n\r\n        est_solicitados: {type: String},\r\n        recomendaciones: {type: String},\r\n    }).validator(),\r\n    run({\r\n        codigo_h,\r\n        id_paciente,\r\n\r\n        ci,\r\n        nombre,\r\n        ap_paterno,\r\n        ap_materno,\r\n\r\n        sexo,\r\n        asegurado,\r\n\r\n        edad,\r\n        tipo_edad,\r\n\r\n        domicilio,\r\n        ocupacion,\r\n\r\n        ficha_id,\r\n        nro_ficha,\r\n        fecha_consulta,\r\n        hora_consulta,\r\n        consultorio,\r\n        medico,\r\n        tipo_consulta,\r\n\r\n        pre_art,\r\n        frec_card,\r\n        frec_resp,\r\n        temperatura,\r\n        gestas,\r\n        para,\r\n        abortos,\r\n        cesareas,\r\n        fum,\r\n        motivo_consulta,\r\n        enfermedad_actual,\r\n        ant_patologicos,\r\n        examen_fisico,\r\n        diagnostico,\r\n\r\n        tratamiento,\r\n\r\n        est_solicitados,\r\n        recomendaciones\r\n    }){\r\n        return Consultas.insert({\r\n            ambulatorio: true,\r\n            codigo_h: codigo_h,\r\n            id_paciente: id_paciente,\r\n\r\n            ci: ci,\r\n            nombre: nombre,\r\n            ap_paterno: ap_paterno,\r\n            ap_materno: ap_materno,\r\n\r\n            sexo: sexo,\r\n            asegurado: asegurado,\r\n\r\n            edad: edad,\r\n            tipo_edad: tipo_edad,\r\n\r\n            domicilio: domicilio,\r\n            ocupacion: ocupacion,\r\n\r\n            ficha_id: ficha_id,\r\n            nro_ficha: nro_ficha,\r\n            fecha_consulta: fecha_consulta,\r\n            dia: fecha_consulta.substr(0, 2),\r\n            mes: fecha_consulta.substr(3, 2),\r\n            a침o: fecha_consulta.substr(6, 4),\r\n\r\n            hora_consulta: hora_consulta,\r\n            consultorio: consultorio,\r\n            medico: medico,\r\n            tipo_consulta: tipo_consulta,\r\n\r\n            pre_art: pre_art,\r\n            frec_card: frec_card,\r\n            frec_resp: frec_resp,\r\n            temperatura: temperatura,\r\n            gestas: gestas,\r\n            para: para,\r\n            abortos: abortos,\r\n            cesareas: cesareas,\r\n            fum: fum,\r\n            motivo_consulta: motivo_consulta,\r\n            enfermedad_actual: enfermedad_actual,\r\n            ant_patologicos: ant_patologicos,\r\n            examen_fisico: examen_fisico,\r\n            diagnostico: diagnostico,\r\n\r\n            tratamiento: tratamiento,\r\n\r\n            est_solicitados: est_solicitados,\r\n            recomendaciones: recomendaciones,\r\n\r\n            fecha_reg: new Date()\r\n        });\r\n    }\r\n});\r\n\r\n/////////////// A칌ADIR RECETA ///////////////\r\nexport const insertReceta = new ValidatedMethod({\r\n    name: 'receta.insert',\r\n    validate: new SimpleSchema({\r\n        ficha_id: {type: String},\r\n        medicamento: {type: String},\r\n        cantidad: {type: String},\r\n        uso: {type: String},\r\n    }).validator(),\r\n    run({\r\n        ficha_id,\r\n        medicamento,\r\n        cantidad,\r\n        uso,\r\n    }){\r\n        return Consultas.update({\r\n            ficha_id: ficha_id\r\n        },{\r\n            $push: {\r\n                tratamiento: {\r\n                    medicamento: medicamento,\r\n                    cantidad: cantidad,\r\n                    uso: uso\r\n                }\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\n//DIAGN칍STICO\r\nexport const insertDiagnostico = new ValidatedMethod({\r\n    name: 'diagnostico.insert',\r\n    validate: new SimpleSchema({\r\n        nombre_diag: {type: String}\r\n    }).validator(),\r\n    run({\r\n        nombre_diag\r\n    }){\r\n        return Diagnostico.insert({\r\n            nombre_diag: nombre_diag\r\n        });\r\n    }\r\n});\r\n\r\n////////////// ENFERMERIA /////////////////\r\n\r\nexport const insertConsultaEnfermeria = new ValidatedMethod({\r\n    name: 'consultaenfermeria.insert',\r\n    validate: new SimpleSchema({\r\n        codigo_h: {type: String},\r\n        id_paciente: {type: String},\r\n\r\n        ci: {type: String},\r\n        nombre: {type: String},\r\n        sexo: {type: String},\r\n\r\n        edad: {type: String},\r\n\r\n        nro_ficha: {type: String},\r\n        fecha_consulta: {type: String},\r\n        hora_consulta: {type: String},\r\n        consultorio: {type: String},\r\n\r\n        tipo_consulta: {type: String},\r\n        diagnostico: {type: [String]},\r\n        otro: {type: String},\r\n        administracion: {type: String},\r\n        via: {type: String},\r\n        medicamento: {type: String},\r\n        medico: {type: String},\r\n        enfermera: {type: String},\r\n\r\n    }).validator(),\r\n    run({\r\n        codigo_h,\r\n        id_paciente,\r\n\r\n        ci,\r\n        nombre,\r\n        sexo,\r\n\r\n        edad,\r\n\r\n        nro_ficha,\r\n        fecha_consulta,\r\n        hora_consulta,\r\n        consultorio,\r\n\r\n        tipo_consulta,\r\n        diagnostico,\r\n        otro,\r\n        administracion,\r\n        via,\r\n        medicamento,\r\n        medico,\r\n        enfermera,\r\n    }){\r\n\r\n        return Consultas.insert({\r\n            ambulatorio_enf: true,\r\n\r\n            codigo_h: codigo_h,\r\n            id_paciente: id_paciente,\r\n\r\n            ci: ci,\r\n            nombre: nombre,\r\n            sexo: sexo,\r\n\r\n            edad: edad,\r\n\r\n            nro_ficha: nro_ficha,\r\n            fecha_consulta: fecha_consulta,\r\n            hora_consulta: hora_consulta,\r\n            consultorio: consultorio,\r\n\r\n            tipo_consulta: tipo_consulta,\r\n            diagnostico: diagnostico,\r\n            otro: otro,\r\n            administracion: administracion,\r\n            via: via,\r\n            medicamento: medicamento,\r\n            medico: medico,\r\n            enfermera: enfermera,\r\n            dia: fecha_consulta.substr(0, 2),\r\n            mes: fecha_consulta.substr(3, 2),\r\n            a침o: fecha_consulta.substr(6, 4),\r\n            fecha_reg: new Date(),\r\n        });\r\n    }\r\n});\r\n\r\nexport const insertInternacionPaciente = new ValidatedMethod({\r\n    name: 'internacionPaciente.insert',\r\n    validate: new SimpleSchema({\r\n        codigo_internacion: {type: String},\r\n        codigo_h: {type: String},\r\n        id_paciente: {type: String},\r\n\r\n        ci: {type: String},\r\n        nombre: {type: String},\r\n        ap_paterno: {type: String},\r\n        ap_materno: {type: String},\r\n\r\n        sexo: {type: String},\r\n\r\n        edad: {type: Number},\r\n        tipo_edad: {type: String},\r\n        asegurado: {type: Boolean},\r\n\r\n        tipo_sala: {type: String},\r\n        sala: {type: String},\r\n        cama: {type: String},\r\n\r\n\r\n        fecha_ing: {type: String},\r\n        hora_ing: {type: String},\r\n\r\n        servicio: {type: String},\r\n        medico: {type: String},\r\n\r\n        pre_art: {type: Number},\r\n        frec_card: {type: Number},\r\n        frec_resp: {type: Number},\r\n        temperatura: {type: Number},\r\n        gestas: {type: Number},\r\n        para: {type: Number},\r\n        abortos: {type: Number},\r\n        cesareas: {type: Number},\r\n        fum: {type: String},\r\n\r\n        motivo_consulta: {type: String},\r\n        ant_patologicos: {type: String},\r\n\r\n        examen_fisico: {type: String},\r\n        piel_mucosas: {type: String},\r\n        glasgow: {type: String},\r\n        cabeza: {type: String},\r\n        cuello: {type: String},\r\n        torax: {type: String},\r\n        abdomen: {type: String},\r\n        extremidades: {type: String},\r\n        diagnostico: {type: String},\r\n\r\n        /*diagnostico: {type: [Object]},\r\n        'diagnostico.$.nom_diagnostico': {type: String},*/\r\n\r\n        /*tratamiento: {type: [Object]},\r\n        'tratamiento.$.medicamento': {type: String},\r\n        'tratamiento.$.cantidad': {type: String},\r\n        'tratamiento.$.uso': {type: String},\r\n        plan: {type: String},*/\r\n\r\n        conducta: {type: String},\r\n        //est_solicitados: {type: String},\r\n\r\n    }).validator(),\r\n    run({\r\n        codigo_internacion,\r\n        codigo_h,\r\n        id_paciente,\r\n\r\n        ci,\r\n        nombre,\r\n        ap_paterno,\r\n        ap_materno,\r\n\r\n        sexo,\r\n\r\n        edad,\r\n        tipo_edad,\r\n        asegurado,\r\n\r\n        tipo_sala,\r\n        sala,\r\n        cama,\r\n\r\n\r\n        fecha_ing,\r\n        hora_ing,\r\n\r\n        servicio,\r\n        medico,\r\n\r\n        pre_art,\r\n        frec_card,\r\n        frec_resp,\r\n        temperatura,\r\n        gestas,\r\n        para,\r\n        abortos,\r\n        cesareas,\r\n        fum,\r\n\r\n        motivo_consulta,\r\n        ant_patologicos,\r\n\r\n        examen_fisico,\r\n        piel_mucosas,\r\n        glasgow,\r\n        cabeza,\r\n        cuello,\r\n        torax,\r\n        abdomen,\r\n        extremidades,\r\n\r\n        diagnostico,\r\n\r\n        /*tratamiento,\r\n        plan,*/\r\n\r\n        conducta,\r\n        //est_solicitados,\r\n    }){\r\n        return Consultas.insert({\r\n            internacion: true,\r\n            codigo_internacion: codigo_internacion,\r\n            codigo_h: codigo_h,\r\n            id_paciente: id_paciente,\r\n\r\n            ci: ci,\r\n            nombre: nombre,\r\n            ap_paterno: ap_paterno,\r\n            ap_materno: ap_materno,\r\n\r\n            sexo: sexo,\r\n\r\n            edad: edad,\r\n            tipo_edad: tipo_edad,\r\n            asegurado: asegurado,\r\n\r\n            tipo_sala: tipo_sala,\r\n            sala: sala,\r\n            cama: cama,\r\n\r\n\r\n            fecha_ing: fecha_ing,\r\n            hora_ing: hora_ing,\r\n\r\n            servicio: servicio,\r\n            medico: medico,\r\n\r\n            pre_art: pre_art,\r\n            frec_card: frec_card,\r\n            frec_resp: frec_resp,\r\n            temperatura: temperatura,\r\n            gestas: gestas,\r\n            para: para,\r\n            abortos: abortos,\r\n            cesareas: cesareas,\r\n            fum: fum,\r\n\r\n            motivo_consulta: motivo_consulta,\r\n            ant_patologicos: ant_patologicos,\r\n\r\n            examen_fisico: examen_fisico,\r\n            piel_mucosas: piel_mucosas,\r\n            glasgow: glasgow,\r\n            cabeza: cabeza,\r\n            cuello: cuello,\r\n            torax: torax,\r\n            abdomen: abdomen,\r\n            extremidades: extremidades,\r\n\r\n            diagnostico: diagnostico,\r\n\r\n            /*tratamiento: tratamiento,\r\n            plan: plan,*/\r\n\r\n            conducta: conducta,\r\n            //est_solicitados: est_solicitados,\r\n\r\n            fecha_reg: new Date()\r\n        });\r\n    }\r\n});\r\n\r\nexport const insertEvolucionPaciente = new ValidatedMethod({\r\n    name: 'evolucionPaciente.insert',\r\n    validate: new SimpleSchema({\r\n        codigo_internacion: {type: String},\r\n        codigo_h: {type: String},\r\n        id_paciente: {type: String},\r\n\r\n        fecha: {type: String},\r\n        hora: {type: String},\r\n\r\n        detalle: {type: String},\r\n        subjetivo: {type: String},\r\n        objetivo: {type: String},\r\n        evolucion: {type: String},\r\n        plan: {type: String},\r\n        medico: {type: String},\r\n\r\n    }).validator(),\r\n    run({\r\n        codigo_internacion,\r\n        codigo_h,\r\n        id_paciente,\r\n\r\n        fecha,\r\n        hora,\r\n\r\n        detalle,\r\n        subjetivo,\r\n        objetivo,\r\n        evolucion,\r\n        plan,\r\n        medico,\r\n\r\n    }){\r\n        return Consultas.insert({\r\n            evolucion: true,\r\n            codigo_internacion: codigo_internacion,\r\n            codigo_h: codigo_h,\r\n            id_paciente: id_paciente,\r\n\r\n            fecha: fecha,\r\n            hora: hora,\r\n\r\n            detalle: detalle,\r\n            subjetivo: subjetivo,\r\n            objetivo: objetivo,\r\n            analisis: evolucion,\r\n            plan: plan,\r\n            medico: medico,\r\n\r\n            fecha_reg: new Date()\r\n        });\r\n    }\r\n});\r\n\r\nexport const insertIndicacionMedica = new ValidatedMethod({\r\n    name: 'indicacionMedica.insert',\r\n    validate: new SimpleSchema({\r\n        codigo_internacion: {type: String},\r\n        codigo_h: {type: String},\r\n        id_paciente: {type: String},\r\n\r\n        fecha: {type: String},\r\n        hora: {type: String},\r\n\r\n        indicaciones: {type: [Object]},\r\n        'indicaciones.$.indicacion': {type: String},\r\n        'indicaciones.$.via': {type: String},\r\n        'indicaciones.$.horario': {type: String},\r\n\r\n        medico: {type: String},\r\n\r\n    }).validator(),\r\n    run({\r\n        codigo_internacion,\r\n        codigo_h,\r\n        id_paciente,\r\n\r\n        fecha,\r\n        hora,\r\n\r\n        indicaciones,\r\n        medico,\r\n\r\n    }){\r\n        return Consultas.insert({\r\n            indicacion: true,\r\n            codigo_internacion: codigo_internacion,\r\n            codigo_h: codigo_h,\r\n            id_paciente: id_paciente,\r\n\r\n            fecha: fecha,\r\n            hora: hora,\r\n\r\n            indicaciones: indicaciones,\r\n            medico: medico,\r\n\r\n            fecha_reg: new Date()\r\n        });\r\n    }\r\n});\r\n\r\nexport const insertIndicacionEnfermeria = new ValidatedMethod({\r\n    name: 'indicacionEnfermeria.insert',\r\n    validate: new SimpleSchema({\r\n        codigo_internacion: {type: String},\r\n        codigo_h: {type: String},\r\n        id_paciente: {type: String},\r\n\r\n        fecha: {type: String},\r\n        hora: {type: String},\r\n\r\n        indicaciones: {type: [Object]},\r\n        'indicaciones.$.medicamento': {type: String},\r\n        'indicaciones.$.descripcion': {type: String},\r\n\r\n        enfermera: {type: String},\r\n\r\n    }).validator(),\r\n    run({\r\n        codigo_internacion,\r\n        codigo_h,\r\n        id_paciente,\r\n\r\n        fecha,\r\n        hora,\r\n\r\n        indicaciones,\r\n        enfermera,\r\n\r\n    }){\r\n        return Consultas.insert({\r\n            indicacion_enf: true,\r\n            codigo_internacion: codigo_internacion,\r\n            codigo_h: codigo_h,\r\n            id_paciente: id_paciente,\r\n\r\n            fecha: fecha,\r\n            hora: hora,\r\n\r\n            indicaciones: indicaciones,\r\n            enfermera: enfermera,\r\n\r\n            fecha_reg: new Date()\r\n        });\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const insertEpicrisisMedica = new ValidatedMethod({\r\n    name: 'epicrisisMedica.insert',\r\n    validate: new SimpleSchema({\r\n        codigo_internacion: {type: String},\r\n        codigo_h: {type: String},\r\n\r\n        paciente: {type: String},\r\n        fecha_ing: {type: String},\r\n        hora_ing: {type: String},\r\n        edad: {type: String},\r\n        resumen_enf_actual: {type: String},\r\n        exploracion_fisica: {type: String},\r\n        pruebas_lab: {type: String},\r\n        fecha_quirurgica: {type: String},\r\n        hora_quirurgica: {type: String},\r\n        diagnostico_prequirurgico: {type: String},\r\n        evolucion: {type: String},\r\n        antibioterapia: {type: String},\r\n        indicaciones_alta: {type: String},\r\n        tipo_alta: {type: String},\r\n        estado_clinico_alta: {type: String},\r\n        diag_definitivo: {type: String},\r\n        medico_responsable: {type: String},\r\n        fecha_alta: {type: String},\r\n        hora_alta: {type: String},\r\n\r\n    }).validator(),\r\n    run({\r\n        codigo_internacion,\r\n        codigo_h,\r\n\r\n        paciente,\r\n        fecha_ing,\r\n        hora_ing,\r\n        edad,\r\n        resumen_enf_actual,\r\n        exploracion_fisica,\r\n        pruebas_lab,\r\n        fecha_quirurgica,\r\n        hora_quirurgica,\r\n        diagnostico_prequirurgico,\r\n        evolucion,\r\n        antibioterapia,\r\n        indicaciones_alta,\r\n        tipo_alta,\r\n        estado_clinico_alta,\r\n        diag_definitivo,\r\n        medico_responsable,\r\n        fecha_alta,\r\n        hora_alta,\r\n\r\n    }){\r\n        return Consultas.insert({\r\n            epicrisis: true,\r\n            codigo_internacion: codigo_internacion,\r\n            codigo_h: codigo_h,\r\n\r\n            paciente: paciente,\r\n            fecha_ing: fecha_ing,\r\n            hora_ing: hora_ing,\r\n            edad: edad,\r\n            resumen_enf_actual: resumen_enf_actual,\r\n            exploracion_fisica: exploracion_fisica,\r\n            pruebas_lab: pruebas_lab,\r\n            fecha_quirurgica: fecha_quirurgica,\r\n            hora_quirurgica: hora_quirurgica,\r\n            diagnostico_prequirurgico: diagnostico_prequirurgico,\r\n            evolucion: evolucion,\r\n            antibioterapia: antibioterapia,\r\n            indicaciones_alta: indicaciones_alta,\r\n            tipo_alta: tipo_alta,\r\n            estado_clinico_alta: estado_clinico_alta,\r\n            diag_definitivo: diag_definitivo,\r\n            medico_responsable: medico_responsable,\r\n            fecha_alta: fecha_alta,\r\n            hora_alta: hora_alta,\r\n\r\n            fecha_reg: new Date()\r\n        });\r\n    }\r\n});\r\n\r\nexport const insertCirugiaMedica = new ValidatedMethod({\r\n    name: 'cirugiaMedica.insert',\r\n    validate: new SimpleSchema({\r\n        codigo_internacion: {type: String},\r\n        codigo_cirugia: {type: String},\r\n        codigo_h: {type: String},\r\n\r\n        id_paciente: {type: String},\r\n        //paciente: {type: String},\r\n        nombre: {type: String},\r\n        ap_paterno: {type: String},\r\n        ap_materno: {type: String},\r\n\r\n        sexo: {type: String},\r\n        edad: {type: Number},\r\n        tipo_edad: {type: String},\r\n        asegurado: {type: Boolean},\r\n        fecha_int: {type: String},\r\n\r\n        cirujano: {type: String},\r\n        especialidad: {type: String},\r\n        diagnostico: {type: String},\r\n        procedimiento: {type: String},\r\n        fecha_cirugia: {type: String},\r\n        hora_cirugia: {type: String},\r\n        tiempo_cirugia: {type: String},\r\n\r\n        inf_cirugia: {type: String},\r\n        reg_por: {type: String},\r\n\r\n    }).validator(),\r\n    run({\r\n        codigo_internacion,\r\n        codigo_h,\r\n\r\n        id_paciente,\r\n        //paciente: {type: String},\r\n        nombre,\r\n        ap_paterno,\r\n        ap_materno,\r\n\r\n        sexo,\r\n        edad,\r\n        tipo_edad,\r\n        asegurado,\r\n        fecha_int,\r\n\r\n        cirujano,\r\n        especialidad,\r\n        diagnostico,\r\n        procedimiento,\r\n        fecha_cirugia,\r\n        hora_cirugia,\r\n        tiempo_cirugia,\r\n\r\n        inf_cirugia,\r\n        reg_por,\r\n    }){\r\n        return Consultas.insert({\r\n            cirugia: true,\r\n            codigo_internacion: codigo_internacion,\r\n            codigo_h: codigo_h,\r\n\r\n            id_paciente: id_paciente,\r\n            //paciente: {type: String},\r\n            nombre: nombre,\r\n            ap_paterno: ap_paterno,\r\n            ap_materno: ap_materno,\r\n\r\n            sexo: sexo,\r\n            edad: edad,\r\n            tipo_edad: tipo_edad,\r\n            asegurado: asegurado,\r\n            fecha_int: fecha_int,\r\n\r\n            cirujano: cirujano,\r\n            especialidad: especialidad,\r\n            diagnostico: diagnostico,\r\n            procedimiento: procedimiento,\r\n            fecha_cirugia: fecha_cirugia,\r\n            dia_cirugia: fecha_cirugia.substr(8, 2),\r\n            mes_cirugia: fecha_cirugia.substr(5, 2),\r\n            a침o_cirugia: fecha_cirugia.substr(0, 4),\r\n\r\n            hora_cirugia: hora_cirugia,\r\n            tiempo_cirugia: tiempo_cirugia,\r\n\r\n            inf_cirugia: inf_cirugia,\r\n            reg_por: reg_por,\r\n\r\n            fecha_reg: new Date()\r\n        });\r\n    }\r\n});\r\n/////////////////// INTERNACION ////////////////////\r\n\r\nexport const insertInternacion = new ValidatedMethod({\r\n    name: 'internacion.insert',\r\n    validate: new SimpleSchema({\r\n        paciente: {type: String},\r\n        transferido_por: {type: String}\r\n    }).validator(),\r\n    run({\r\n        paciente,\r\n        transferido_por\r\n    }){\r\n        return Internaciones.insert({\r\n            paciente: paciente,\r\n            transferido_por: transferido_por,\r\n            admision: false,\r\n            alta_medica: false,\r\n            alta_enfermeria: false,\r\n            fecha_reg: new Date()\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateAdmisionInternacion = new ValidatedMethod({\r\n    name: 'admisioninternacion.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        medico: {type: String},\r\n        fecha_ing: {type: String},\r\n        hora_ing: {type: String},\r\n        sala: {type: String},\r\n        cama: {type: String},\r\n        admision: {type: Boolean},\r\n        admision_enf: {type: Boolean},\r\n        diagnostico: {type: String},\r\n    }).validator(),\r\n    run({id, medico, fecha_ing, hora_ing, sala, cama, admision, admision_enf, diagnostico}){\r\n        return Internaciones.update({\r\n                _id:id\r\n            },{\r\n                $set:{\r\n                    medico: medico,\r\n                    fecha_ing: fecha_ing,\r\n                    dia: fecha_ing.substr(8, 2),\r\n                    mes: fecha_ing.substr(5, 2),\r\n                    a침o: fecha_ing.substr(0, 4),\r\n                    hora_ing: hora_ing,\r\n                    sala: sala,\r\n                    cama: cama,\r\n                    admision: admision,\r\n                    admision_enf: admision_enf,\r\n                    diagnostico: diagnostico,\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateAltaMedicaInternacion = new ValidatedMethod({\r\n    name: 'altamedicainternacion.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        alta_medica: {type: Boolean},\r\n        medico_alta:{type: String},\r\n        alta_medica_fecha: {type: String},\r\n        alta_medica_hora: {type: String}\r\n    }).validator(),\r\n    run({id, alta_medica, alta_medica_fecha, alta_medica_hora, medico_alta}){\r\n        return Internaciones.update({\r\n                _id:id\r\n            },{\r\n                $set:{\r\n                    alta_medica: alta_medica,\r\n                    alta_medica_fecha: alta_medica_fecha,\r\n                    dia_alta: alta_medica_fecha.substr(0, 2),\r\n                    mes_alta: alta_medica_fecha.substr(3, 2),\r\n                    a침o_alta: alta_medica_fecha.substr(6, 4),\r\n                    alta_medica_hora: alta_medica_hora,\r\n                    medico_alta: medico_alta,\r\n                    fecha_alta_reg: new Date(),\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateAltaEnfermeriaInternacion = new ValidatedMethod({\r\n    name: 'altaenfermeriainternacion.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        alta_enfermeria: {type: Boolean},\r\n    }).validator(),\r\n    run({id, alta_enfermeria}){\r\n        return Internaciones.update({\r\n                _id:id\r\n            },{\r\n                $set:{\r\n                    alta_enfermeria: alta_enfermeria,\r\n                    pagado: false,\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updatePagoEnfermeriaInternacion = new ValidatedMethod({\r\n    name: 'pagoenfermeriainternacion.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        cobrado_por: {type: String},\r\n    }).validator(),\r\n    run({id, cobrado_por}){\r\n        return Internaciones.update({\r\n                _id:id\r\n            },{\r\n                $set:{\r\n                    pagado: true,\r\n                    cobrado_por: cobrado_por,\r\n                    reportado: false,\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateReportadoInternacion = new ValidatedMethod({\r\n    name: 'reportadointernacion.update',\r\n    validate: new SimpleSchema({\r\n        cobrado_por: {type: String},\r\n        codigo_reporte: {type: String},\r\n    }).validator(),\r\n    run({cobrado_por, codigo_reporte}){\r\n        return Internaciones.update({\r\n                cobrado_por: cobrado_por,\r\n                reportado: false,\r\n            },{\r\n                $set:{\r\n                    reportado: true,\r\n                    codigo_reporte: codigo_reporte\r\n                }\r\n        },{\r\n            multi:true\r\n        });\r\n    }\r\n});\r\n\r\n/////////////////// QUIROFANO ////////////////////\r\n\r\nexport const insertQuirofano = new ValidatedMethod({\r\n    name: 'quirofano.insert',\r\n    validate: new SimpleSchema({\r\n        codigo_internacion: {type: String},\r\n        codigo_h: {type: String},\r\n        id_paciente: {type: String},\r\n        //paciente: {type: String},\r\n        nombre: {type: String},\r\n        ap_paterno: {type: String},\r\n        ap_materno: {type: String},\r\n\r\n        sexo: {type: String},\r\n        edad: {type: Number},\r\n        tipo_edad: {type: String},\r\n        asegurado: {type: Boolean},\r\n        fecha_int: {type: String},\r\n\r\n        cirujano: {type: String},\r\n        especialidad: {type: String},\r\n        diagnostico: {type: String},\r\n        procedimiento: {type: String},\r\n        fecha_cirugia: {type: String},\r\n        hora_cirugia: {type: String},\r\n        tiempo_cirugia: {type: String},\r\n        otros: {type: String},\r\n        reg_por: {type: String},\r\n    }).validator(),\r\n    run({\r\n        codigo_internacion,\r\n        codigo_h,\r\n        id_paciente,\r\n        nombre,\r\n        ap_paterno,\r\n        ap_materno,\r\n        sexo,\r\n        edad,\r\n        tipo_edad,\r\n        asegurado,\r\n        fecha_int,\r\n\r\n        cirujano,\r\n        especialidad,\r\n        diagnostico,\r\n        procedimiento,\r\n        fecha_cirugia,\r\n        hora_cirugia,\r\n        tiempo_cirugia,\r\n        otros,\r\n        reg_por\r\n    }){\r\n        return Quirofano.insert({\r\n            codigo_internacion: codigo_internacion,\r\n            codigo_h: codigo_h,\r\n            id_paciente: id_paciente,\r\n            nombre: nombre,\r\n            ap_paterno: ap_paterno,\r\n            ap_materno: ap_materno,\r\n            sexo: sexo,\r\n            edad: edad,\r\n            tipo_edad: tipo_edad,\r\n            asegurado: asegurado,\r\n            fecha_int: fecha_int,\r\n\r\n            cirujano: cirujano,\r\n            especialidad: especialidad,\r\n            diagnostico: diagnostico,\r\n            procedimiento: procedimiento,\r\n            fecha_cirugia: fecha_cirugia,\r\n            hora_cirugia: hora_cirugia,\r\n            tiempo_cirugia: tiempo_cirugia,\r\n            otros: otros,\r\n            finalizado: false,\r\n            reg_por: reg_por,\r\n            fecha_reg: new Date()\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateEditQuirofano = new ValidatedMethod({\r\n    name: 'editquirofano.insert',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n\r\n        cirujano: {type: String},\r\n        especialidad: {type: String},\r\n        diagnostico: {type: String},\r\n        procedimiento: {type: String},\r\n        fecha_cirugia: {type: String},\r\n        hora_cirugia: {type: String},\r\n        tiempo_cirugia: {type: String},\r\n        otros: {type: String},\r\n        reg_por: {type: String},\r\n    }).validator(),\r\n    run({\r\n        id,\r\n        cirujano,\r\n        especialidad,\r\n        diagnostico,\r\n        procedimiento,\r\n        fecha_cirugia,\r\n        hora_cirugia,\r\n        tiempo_cirugia,\r\n        otros,\r\n        reg_por\r\n    }){\r\n        return Quirofano.update({\r\n                _id:id\r\n            },{\r\n                $set:{\r\n                    cirujano: cirujano,\r\n                    especialidad: especialidad,\r\n                    diagnostico: diagnostico,\r\n                    procedimiento: procedimiento,\r\n                    fecha_cirugia: fecha_cirugia,\r\n                    hora_cirugia: hora_cirugia,\r\n                    tiempo_cirugia: tiempo_cirugia,\r\n                    otros: otros,\r\n                    finalizado: false,\r\n                    reg_por: reg_por,\r\n                    fecha_reg: new Date()\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateQuirofano = new ValidatedMethod({\r\n    name: 'quirofano.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        informe: {type: String, optional: true},\r\n        finalizado: {type: Boolean},\r\n    }).validator(),\r\n    run({id, informe, finalizado}){\r\n        return Quirofano.update({\r\n                _id:id\r\n            },{\r\n                $set:{\r\n                    informe: informe,\r\n                    finalizado: finalizado,\r\n                }\r\n        });\r\n    }\r\n});\r\n\r\nexport const removeQuirofano = new ValidatedMethod({\r\n    name: 'quirofano.remove',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n    }).validator(),\r\n    run({id}){\r\n        return Quirofano.remove({_id: id});\r\n    }\r\n});\r\n\r\nexport const insertSignosVitales = new ValidatedMethod({\r\n    name: 'signosvitales.insert',\r\n    validate: new SimpleSchema({\r\n        codigo_internacion: {type: String},\r\n        codigo_h: {type: String},\r\n        id_paciente: {type: String},\r\n\r\n\r\n        fecha: {type: String},\r\n        turno: {type: String, optional: true},\r\n\r\n        sin_control: {type: Boolean},\r\n\r\n        nombre_control: {type: String, optional: true},\r\n        dato_control: {type: String, optional: true},\r\n\r\n        /*presion_art: {type: String},\r\n        f_respiratorias: {type: String},\r\n        l_parenterales: {type: String},\r\n        l_ingeridos: {type: String},\r\n        orina: {type: String},\r\n        vomitos: {type: String},\r\n        deposicion: {type: String},\r\n        otros: {type: String},*/\r\n\r\n    }).validator(),\r\n    run({\r\n        codigo_internacion,\r\n        codigo_h,\r\n        id_paciente,\r\n\r\n        fecha,\r\n        turno,\r\n\r\n        sin_control,\r\n\r\n        nombre_control,\r\n        dato_control\r\n        /*\r\n        presion_art,\r\n        f_respiratorias,\r\n        l_parenterales,\r\n        l_ingeridos,\r\n        orina,\r\n        vomitos,\r\n        deposicion,\r\n        otros,*/\r\n    }){\r\n        return SignosVitales.insert({\r\n            codigo_internacion: codigo_internacion,\r\n            codigo_h: codigo_h,\r\n            id_paciente: id_paciente,\r\n            fecha: fecha,\r\n            turno: turno,\r\n\r\n            sin_control: sin_control,\r\n\r\n            nombre_control: nombre_control,\r\n            dato_control: dato_control,\r\n            /*\r\n            presion_art: presion_art,\r\n            f_respiratorias: f_respiratorias,\r\n            l_parenterales: l_parenterales,\r\n            l_ingeridos: l_ingeridos,\r\n            orina: orina,\r\n            vomitos: vomitos,\r\n            deposicion: deposicion,\r\n            otros: otros,*/\r\n            fecha_reg: new Date(),\r\n        });\r\n    }\r\n});\r\n\r\n// SALA DE PARTOS\r\n\r\nexport const insertPartos = new ValidatedMethod({\r\n    name: 'partos.insert',\r\n    validate: new SimpleSchema({\r\n        codigo_internacion: {type: String},\r\n        codigo_h: {type: String},\r\n        id_paciente: {type: String},\r\n\r\n\r\n        fecha_ing: {type: String},\r\n        hora_ing: {type: String},\r\n        fecha_salida: {type: String},\r\n        hora_salida: {type: String},\r\n        fecha_nac: {type: String},\r\n        hora_nac: {type: String},\r\n        sexo: {type: String},\r\n        peso: {type: String},\r\n        talla: {type: String},\r\n        descripcion: {type: String},\r\n        medico: {type: String},\r\n        enfermera: {type: String},\r\n\r\n    }).validator(),\r\n    run({\r\n        codigo_internacion,\r\n        codigo_h,\r\n        id_paciente,\r\n\r\n        fecha_ing,\r\n        hora_ing,\r\n        fecha_salida,\r\n        hora_salida,\r\n        fecha_nac,\r\n        hora_nac,\r\n        sexo,\r\n        peso,\r\n        talla,\r\n        descripcion,\r\n        medico,\r\n        enfermera,\r\n    }){\r\n        return SalaPartos.insert({\r\n            codigo_internacion: codigo_internacion,\r\n            codigo_h: codigo_h,\r\n            id_paciente: id_paciente,\r\n\r\n            fecha_ing: fecha_ing,\r\n\r\n\r\n\r\n            hora_ing: hora_ing,\r\n            fecha_salida: fecha_salida,\r\n            hora_salida: hora_salida,\r\n            fecha_nac: fecha_nac,\r\n\r\n            dia_nac: fecha_nac.substr(8, 2),\r\n            mes_nac: fecha_nac.substr(5, 2),\r\n            a침o_nac: fecha_nac.substr(0, 4),\r\n\r\n            hora_nac: hora_nac,\r\n            sexo: sexo,\r\n            peso: peso,\r\n            talla: talla,\r\n            descripcion: descripcion,\r\n            medico: medico,\r\n            enfermera: enfermera,\r\n\r\n            fecha_reg: new Date(),\r\n        });\r\n    }\r\n});\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { ValidateMethod } from 'meteor/mdg:validated-method';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\nimport { Mayores } from './collections.js';\r\n\r\nexport const insertMayor = new ValidatedMethod({\r\n    name: 'mayor.insert',\r\n    validate: new SimpleSchema({\r\n        codigo_cuenta: {type: String},\r\n        //nombre_cuenta: {type: String},\r\n        tipo: {type: String},\r\n        gestion: {type: String},\r\n    }).validator(),\r\n    run({\r\n        codigo_cuenta,\r\n        //nombre_cuenta,\r\n        tipo,\r\n        gestion\r\n    }){\r\n        return Mayores.insert({\r\n            codigo_cuenta: codigo_cuenta,\r\n            //nombre_cuenta: nombre_cuenta,\r\n            tipo: tipo,\r\n            gestion: gestion,\r\n            total_debe: '0.00',\r\n            total_haber: '0.00'\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateMayor = new ValidatedMethod({\r\n    name: 'mayor.update',\r\n    validate: new SimpleSchema({\r\n        codigo_cuenta: {type: String},\r\n        gestion: {type: String},\r\n        fecha: {type: String},\r\n        nro_comprobante: {type: String},\r\n        detalle: {type: String},\r\n        nro_cheque: {type: String},\r\n        debe: {type: String},\r\n        haber: {type: String},\r\n        //total_debe: {type: String},\r\n        //total_haber: {type: String}\r\n    }).validator(),\r\n    run({\r\n        codigo_cuenta,\r\n        //nombre_cuenta,\r\n        gestion,\r\n        fecha,\r\n        nro_comprobante,\r\n        detalle,\r\n        nro_cheque,\r\n        debe,\r\n        haber,\r\n        //total_debe,\r\n        //total_haber\r\n    }){\r\n        return Mayores.update({\r\n            codigo_cuenta: codigo_cuenta,\r\n            gestion: gestion,\r\n            //total_debe: total_debe,\r\n            //total_haber: total_haber\r\n        },{\r\n            $push:{\r\n                movimientos:{\r\n                    fecha: fecha,\r\n                    nro_comprobante: nro_comprobante,\r\n                    detalle: detalle,\r\n                    nro_cheque: nro_cheque,\r\n                    debe: debe,\r\n                    haber: haber,\r\n                }\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateTotalesMayor = new ValidatedMethod({\r\n    name: 'totalesmayor.update',\r\n    validate: new SimpleSchema({\r\n        codigo_cuenta: {type: String},\r\n        gestion: {type: String},\r\n        debe: {type: String},\r\n        haber: {type: String},\r\n        //total_debe: {type: String},\r\n        //total_haber: {type: String}\r\n    }).validator (),\r\n    run ({\r\n        codigo_cuenta,\r\n        gestion,\r\n        debe,\r\n        haber,\r\n    }) {\r\n        return Mayores.update({\r\n            codigo_cuenta: codigo_cuenta,\r\n            gestion: gestion,\r\n        },{\r\n            $set:{\r\n                total_debe: debe,\r\n                total_haber: haber\r\n            }\r\n        });\r\n    }\r\n});\r\n/*export const updateMayor = new ValidatedMethod({\r\n    name: 'mayor.update',\r\n    validate: new SimpleSchema({\r\n        codigo_cuenta: {type: String},\r\n        nombre_cuenta: {type: String},\r\n        gestion: {type: String},\r\n        movimientos: {type: [Object]},\r\n        'movimientos.$.fecha': {type: String},\r\n        'movimientos.$.nro_comprobante': {type: String},\r\n        'movimientos.$.detalle': {type: String},\r\n        'movimientos.$.nro_cheque': {type: String},\r\n        'movimientos.$.debe': {type: String},\r\n        'movimientos.$.haber': {type: String},\r\n        total_debe: {type: String},\r\n        total_haber: {type: String}\r\n    }).validator(),\r\n    run({\r\n        codigo_cuenta,\r\n        nombre_cuenta,\r\n        gestion,\r\n        movimientos,\r\n        total_debe,\r\n        total_haber\r\n    }){\r\n        return Mayores.update({\r\n            codigo_cuenta: codigo_cuenta,\r\n            gestion: gestion,\r\n            movimientos: movimientos,\r\n            total_debe: total_debe,\r\n            total_haber: total_haber\r\n        },{\r\n            $push:{\r\n                movimientos:{\r\n                    movimiento: movimientos\r\n                }\r\n            }\r\n        });\r\n    }\r\n});*/\r\n","import { Meteor } from 'meteor/meteor';\nimport { ValidateMethod } from 'meteor/mdg:validated-method';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\nimport { Medicamentos, Compras, Ventas, ReporteFarmacia, Clientes, Lineas } from './collections.js';\n\nexport const insertMedicamento = new ValidatedMethod({\n    name: 'medicamento.insert',\n    validate: new SimpleSchema({\n        linea: {type: String},\n        item: {type: String},\n        nombre_comercial: {type: String},\n        nombre_generico: {type: String},\n        unidad: {type: String},\n        fecha_caducidad: {type: Date},\n        puc: {type: String},\n        puv: {type: String},\n        cantidad: {type: Number},\n        devolucion: {type: Boolean}\n    }).validator (),\n    run ({\n        linea,\n        item,\n        nombre_comercial,\n        nombre_generico,\n        unidad,\n        fecha_caducidad,\n        puc,\n        puv,\n        cantidad,\n        devolucion\n    }) {\n        return Medicamentos.insert({\n            activo: true,\n            linea: linea,\n            item: item,\n            nombre_comercial: nombre_comercial,\n            nombre_generico: nombre_generico,\n            unidad: unidad,\n            fecha_caducidad: fecha_caducidad,\n            puc: puc,\n            puv: puv,\n            cantidad: cantidad,\n            devolucion: devolucion\n        });\n    }\n});\n\nexport const updateMedicamCant = new ValidatedMethod({\n    name: 'medicamcant.update',\n    validate: new SimpleSchema({\n        id: {type: String},\n        cantidad: {type: Number},\n        fecha_caducidad: {type: Date},\n        puc: {type: String},\n        puv: {type: String},\n    }).validator (),\n    run ({ id, cantidad, fecha_caducidad, puc, puv }) {\n        return Medicamentos.update({\n            _id: id\n        },{\n            $set: {\n                cantidad: Medicamentos.find({_id: id}).fetch()[0].cantidad + cantidad,\n                fecha_caducidad: fecha_caducidad,\n                puc: puc,\n                puv: puv,\n            }\n        });\n    }\n});\n\nexport const updateStockMedicam = new ValidatedMethod({\n    name: 'stockmedicam.update',\n    validate: new SimpleSchema({\n        id: {type: String},\n        cantidad: {type: Number},\n    }).validator (),\n    run ({ id, cantidad }) {\n        return Medicamentos.update({\n            _id: id\n        },{\n            $set: {\n                cantidad: Medicamentos.find({_id: id}).fetch()[0].cantidad - cantidad,\n            }\n        });\n    }\n});\n\nexport const updateMedicamento = new ValidatedMethod({\n    name: 'medicamento.update',\n    validate: new SimpleSchema({\n        id: {type: String},\n        linea: {type: String},\n        item: {type: String},\n        nombre_comercial: {type: String},\n        nombre_generico: {type: String},\n        unidad: {type: String},\n        fecha_caducidad: {type: Date},\n        puc: {type: String},\n        puv: {type: String},\n        cantidad: {type: Number},\n        devolucion: {type: Boolean}\n    }).validator (),\n    run ({\n        id,\n        linea,\n        item,\n        nombre_comercial,\n        nombre_generico,\n        unidad,\n        fecha_caducidad,\n        puc,\n        puv,\n        cantidad,\n        devolucion\n    }) {\n        return Medicamentos.update({\n            _id: id\n        },{\n            $set: {\n                linea: linea,\n                item: item,\n                nombre_comercial: nombre_comercial,\n                nombre_generico: nombre_generico,\n                unidad: unidad,\n                fecha_caducidad: fecha_caducidad,\n                puc: puc,\n                puv: puv,\n                cantidad: cantidad,\n                devolucion: devolucion\n            }\n        });\n    }\n});\n\nexport const removeMedicamento = new ValidatedMethod({\n    name: 'medicamento.remove',\n    validate: new SimpleSchema({\n        id: {type: String},\n        activo: {type: Boolean}\n    }).validator (),\n    run ({id, activo}) {\n        return Medicamentos.update({\n            _id:id\n        }, {\n            $set: {\n                activo: activo,\n                cantidad: 0\n            }\n        });\n    }\n});\n\n\n// COMPRA DE MEDICAMENTOS\n\nexport const insertCompraMedicamento = new ValidatedMethod({\n    name: 'compra_medicamento.insert',\n    validate: new SimpleSchema({\n        codigo_compra: {type: String},\n        total: {type: String},\n        reg_por: {type: String},\n\n        detalle_compra: {type: [Object]},\n        'detalle_compra.$.id_medicamento': {type: String},\n        'detalle_compra.$.nombre_comercial': {type: String},\n        'detalle_compra.$.unidad': {type: String},\n        'detalle_compra.$.linea': {type: String},\n        'detalle_compra.$.item': {type: String},\n        'detalle_compra.$.puc': {type: String},\n        'detalle_compra.$.puv': {type: String},\n        'detalle_compra.$.cantidad': {type: Number},\n        'detalle_compra.$.fecha_caducidad': {type: Date},\n        'detalle_compra.$.nro_factura': {type: String},\n        'detalle_compra.$.total': {type: String},\n\n    }).validator (),\n    run ({\n        codigo_compra,\n        total,\n        reg_por,\n\n        detalle_compra,\n    }) {\n        return Compras.insert({\n            codigo_compra: codigo_compra,\n            total: total,\n            reg_por: reg_por,\n            fecha_registro: new Date(),\n            dia: (new Date()).getDate()+'',\n            mes: ((new Date()).getMonth()+1)+'',\n            a침o: (new Date()).getFullYear()+'',\n            detalle_compra: detalle_compra\n        });\n    }\n});\n\n//VENTA DE MEDICAMENTOS\n\nexport const insertVentaMedicamento = new ValidatedMethod({\n    name: 'venta_medicamento.insert',\n    validate: new SimpleSchema({\n        codigo_venta: {type: String},\n        total: {type: String},\n        reg_por: {type: String},\n        id_us: {type: String},\n        dia_reg: {type: String},\n        mes_reg: {type: String},\n        a침o_reg: {type: String},\n        hora_reg: {type: String},\n        baja: {type: Boolean},\n\n        detalle_venta: {type: [Object]},\n        //'detalle_venta.$.cod_venta': {type: String},\n        'detalle_venta.$.id_medicamento': {type: String},\n        'detalle_venta.$.item': {type: String},\n        'detalle_venta.$.nombre_comercial': {type: String},\n        'detalle_venta.$.unidad': {type: String},\n        'detalle_venta.$.puv': {type: String},\n        'detalle_venta.$.cantidad': {type: Number},\n\n        'detalle_venta.$.precio_total': {type: String},\n        'detalle_venta.$.motivo': {type: String},\n\n    }).validator (),\n    run ({\n        codigo_venta,\n        total,\n        reg_por,\n        id_us,\n        dia_reg,\n        mes_reg,\n        a침o_reg,\n        hora_reg,\n        baja,\n\n        detalle_venta,\n    }) {\n        return Ventas.insert({\n            codigo_venta: codigo_venta,\n            total: total,\n            reg_por: reg_por,\n            id_us: id_us,\n            devuelto: false,\n            fecha_registro: new Date,\n            dia: dia_reg,\n            mes: mes_reg,\n            a침o: a침o_reg,\n            hora_reg: hora_reg,\n\n            reportado: false,\n            baja: baja,\n\n            detalle_venta: detalle_venta\n        });\n    }\n});\n\nexport const devolucionMedicamFarmacia = new ValidatedMethod({\n    name: 'devolucionmedicamfarmacia.update',\n    validate: new SimpleSchema({\n        id: {type: String},\n        medicamento: {type: String},\n        total: {type: String},\n        cantidad: {type: Number}\n    }).validator(),\n    run({\n        id,\n        medicamento,\n        total,\n        cantidad\n    }){\n        return [\n            Ventas.update({\n                _id: id\n            },{$pull:\n                {\n                    detalle_venta: {\n                        id_medicamento: medicamento\n                    }\n                }\n            }),\n            Ventas.update({\n                _id: id\n            },{\n                $set: {\n                    total: total,\n                }\n            }),\n            Medicamentos.update({\n                _id: medicamento\n            },{\n                $set: {\n                    cantidad: Medicamentos.find({_id: medicamento}).fetch()[0].cantidad + cantidad,\n                }\n            })\n        ]\n    }\n});\n\nexport const devolucionVentaFarmacia = new ValidatedMethod({\n    name: 'devolucionventafarmacia.update',\n    validate: new SimpleSchema({\n        id: {type: String},\n    }).validator(),\n    run({\n        id,\n    }){\n        return Ventas.update({\n            _id: id\n        },{\n            $set: {\n                devuelto: true,\n            }\n        })\n    }\n});\n\nexport const updateClienteVenta = new ValidatedMethod({\n    name: 'clienteventa.update',\n    validate: new SimpleSchema({\n        id: {type: String},\n        ci: {type: String},\n        nombre: {type: String},\n    }).validator (),\n    run ({\n        id,\n        ci,\n        nombre,\n    }) {\n        return Ventas.update({\n            _id: id\n        },{\n            $set: {\n                ci: ci,\n                nombre: nombre,\n            }\n        });\n    }\n});\n\n// REPORTE FARMACIA\nexport const insertReporteFarmacia = new ValidatedMethod({\n    name: 'reportefarmacia.insert',\n    validate: new SimpleSchema({\n        codigo_reporte: {type: String},\n        //fecha_reporte: {type: String},\n        dia: {type: String},\n        mes: {type: String},\n        a침o: {type: String},\n\n        hora_reporte: {type: String},\n        reporte_enviado: {type: Boolean},\n        us_env: {type: String},\n        total: {type: String},\n\n        /*reporte_recibido: {type: Boolean},\n        dia_rec: {type: String},\n        mes_rec: {type: String},\n        a침o_rec: {type: String},\n        //fecha_recibido: {type: String},\n        hora_recibido: {type: String},\n        us_rec: {type: String , optional: true},*/\n    }).validator(),\n    run({\n        codigo_reporte,\n        //fecha_reporte,\n        dia,\n        mes,\n        a침o,\n        hora_reporte,\n        reporte_enviado,\n        us_env,\n        total,\n\n        /*reporte_recibido,\n        dia_rec,\n        mes_rec,\n        a침o_rec,\n        //fecha_recibido,\n        hora_recibido,\n        us_rec,*/\n    }){\n        return [\n            ReporteFarmacia.insert({\n                codigo_reporte: codigo_reporte,\n                fecha_reporte: dia + '/' + mes + '/' + a침o,\n                dia: dia,\n                mes: mes,\n                a침o: a침o,\n                hora_reporte: hora_reporte,\n                reporte_enviado: reporte_enviado,\n                us_env: us_env,\n                total: total,\n                reporte_recibido: false,\n\n                fecha_registro: new Date(),\n\n                /*dia_rec: dia_rec,\n                mes_rec: mes_rec,\n                a침o_rec: a침o_rec,\n                //fecha_recibido: fecha_recibido,\n                hora_recibido: hora_recibido,\n                us_rec: us_rec,*/\n            }),\n            Ventas.update({\n                id_us: us_env,\n                reportado: false,\n                devuelto: false,\n            },{\n                $set: {\n                    reportado: true,\n                    codigo_reporte: codigo_reporte\n                }\n            },{\n                multi: true\n            })\n        ];\n    }\n});\n\nexport const updateReporteFarmacia = new ValidatedMethod({\n    name: 'reportefarmacia.update',\n    validate: new SimpleSchema({\n        id: {type: String},\n        reporte_recibido: {type: Boolean},\n        dia_rec: {type: String},\n        mes_rec: {type: String},\n        a침o_rec: {type: String},\n        //fecha_recibido: {type: String},\n        hora_recibido: {type: String},\n        us_rec: {type: String , optional: true},\n    }).validator(),\n    run({\n        id,\n        reporte_recibido,\n        dia_rec,\n        mes_rec,\n        a침o_rec,\n        //fecha_recibido,\n        hora_recibido,\n        us_rec,\n    }){\n        return ReporteFarmacia.update({\n                _id: id\n            },{\n                $set:{\n                    reporte_recibido: reporte_recibido,\n                    dia_rec: dia_rec,\n                    mes_rec: mes_rec,\n                    a침o_rec: a침o_rec,\n                    fecha_recibido: dia_rec + '/' + mes_rec+ '/' + a침o_rec,\n                    hora_recibido: hora_recibido,\n                    us_rec: us_rec,\n                }\n        });\n    }\n});\n\n// CLIENTES FARMACIA\nexport const insertCliente = new ValidatedMethod({\n    name: 'cliente.insert',\n    validate: new SimpleSchema({\n        ci: {type: String},\n        nombre: {type: String},\n    }).validator (),\n    run ({\n        ci,\n        nombre,\n    }) {\n        return Clientes.insert({\n            ci: ci,\n            nombre: nombre,\n        });\n    }\n});\n\nexport const updateCliente = new ValidatedMethod({\n    name: 'cliente.update',\n    validate: new SimpleSchema({\n        id: {type: String},\n        ci: {type: String},\n        nombre: {type: String},\n    }).validator (),\n    run ({\n        id,\n        ci,\n        nombre,\n    }) {\n        return Clientes.update({\n            _id: id\n        },{\n            $set: {\n                ci: ci,\n                nombre: nombre,\n            }\n        })\n    }\n});\n\n\n// LINEAS FARMACEUTICAS\n\nexport const insertLinea = new ValidatedMethod({\n    name: 'linea.insert',\n    validate: new SimpleSchema({\n        nombre_linea: {type: String},\n        telefono: {type: String}\n    }).validator (),\n    run ({nombre_linea, telefono }) {\n        return Lineas.insert({\n            nombre_linea: nombre_linea,\n            telefono: telefono\n        });\n    }\n});\n\nexport const updateLinea = new ValidatedMethod({\n    name: 'linea.update',\n    validate: new SimpleSchema({\n        id: {type: String},\n        nombre_linea: {type: String},\n        telefono: {type: String}\n    }).validator (),\n    run ({id, nombre_linea, telefono }) {\n        return Lineas.update({\n            _id:id\n        },{\n            $set:{\n                nombre_linea: nombre_linea,\n                telefono: telefono\n            }\n        });\n    }\n});\n\nexport const removeLinea = new ValidatedMethod({\n    name: 'linea.remove',\n    validate: new SimpleSchema({\n        id: {type: String}\n    }).validator (),\n    run ({id}) {\n        return Lineas.remove({\n            _id: id\n        });\n    }\n});\n","import { Meteor } from 'meteor/meteor';\r\nimport { ValidateMethod } from 'meteor/mdg:validated-method';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\nimport { Medicos } from './collections.js';\r\n\r\nexport const insertMedico = new ValidatedMethod({\r\n    name: 'medico.insert',\r\n    validate: new SimpleSchema({\r\n        medico: {type: String},\r\n        consultorio: {type: String},\r\n        asignado: {type: Boolean}\r\n    }).validator (),\r\n    run ({\r\n        medico,\r\n        consultorio,\r\n        asignado\r\n    }) {\r\n        return Medicos.insert({\r\n            medico: medico,\r\n            consultorio: consultorio,\r\n            asignado: asignado\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateMedico = new ValidatedMethod({\r\n    name: 'medico.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        medico: {type: String},\r\n        consultorio: {type: String},\r\n        asignado: {type: Boolean}\r\n    }).validator (),\r\n    run ({\r\n        id,\r\n        medico,\r\n        consultorio,\r\n        asignado\r\n    }) {\r\n        return Medicos.update({\r\n                _id: id\r\n            },{\r\n                $set:{\r\n                    medico: medico,\r\n                    consultorio: consultorio,\r\n                    asignado: asignado    \r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateMedicoUs = new ValidatedMethod({\r\n    name: 'medicous.update',\r\n    validate: new SimpleSchema({\r\n        idUs: {type: String},\r\n        ci: {type: String},\r\n        titulo: {type: String},\r\n        nombre: {type: String},\r\n        avatar: {type: String}\r\n    }).validator (),\r\n    run ({idUs, ci, titulo, nombre, avatar}) {\r\n        return Medicos.update({\r\n                idUs: idUs\r\n            },{\r\n                $set:{\r\n                    ci: ci,\r\n                    titulo: titulo,\r\n                    nombre: nombre,\r\n                    avatar: avatar\r\n            }\r\n        });\r\n    }\r\n});\r\nexport const removeMedico = new ValidatedMethod({\r\n    name: 'medico.remove',\r\n    validate: new SimpleSchema({\r\n        idUs: {type: String}\r\n    }).validator (),\r\n    run ({idUs}) {\r\n        return Medicos.remove({idUs: idUs});\r\n        }\r\n});\r\n\r\nexport const updateMedicoEsp = new ValidatedMethod({\r\n    name: 'medicoesp.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        especialidad: {type: String}\r\n    }).validator (),\r\n    run ({id, especialidad}) {\r\n        return Medicos.update({\r\n                _id: id\r\n            },{\r\n                $set:{\r\n                    especialidad: especialidad\r\n            }\r\n        });\r\n    }\r\n});\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { ValidateMethod } from 'meteor/mdg:validated-method';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\nimport { Pacientes } from './collections.js';\r\n\r\nexport const insertPaciente = new ValidatedMethod({\r\n    name: 'asegurado.insert',\r\n    validate: new SimpleSchema({\r\n        tipo_paciente: {type: String},\r\n        asegurado: {type: Boolean},\r\n        codigo_asegurado: {type: String, optional: true},\r\n        ci: {type: String},\r\n        nombre: {type: String},\r\n        ap_paterno: {type: String},\r\n        ap_materno: {type: String},\r\n        parentesco: {type: String, optional: true},\r\n        sexo: {type: String},\r\n        fecha_nac: {type: String},\r\n        fecha_extincion: {type: String, optional: true},\r\n        direccion: {type: String},\r\n        empleador: {type: String, optional: true},\r\n        foto: {type: String, optional: true},\r\n        fecha_reg: {type: Date},\r\n        registrado_por: {type: String},\r\n        observaciones: {type: [Object], optional: true},\r\n        'observaciones.$.obs_fecha': {type: Date},\r\n        'observaciones.$.obs_titulo': {type: String},\r\n        'observaciones.$.obs_concepto': {type: String},\r\n        'observaciones.$.obs_propietario': {type: String}\r\n    }).validator (),\r\n    run ({\r\n        tipo_paciente,\r\n        asegurado,\r\n        codigo_asegurado,\r\n        ci,\r\n        nombre,\r\n        ap_paterno,\r\n        ap_materno,\r\n        parentesco,\r\n        sexo,\r\n        fecha_nac,\r\n        fecha_extincion,\r\n        direccion,\r\n        empleador,\r\n        foto,\r\n        fecha_reg,\r\n        registrado_por,\r\n        observaciones\r\n    }) {\r\n        return Pacientes.insert({\r\n            tipo_paciente: tipo_paciente,\r\n            asegurado: asegurado,\r\n            codigo_asegurado: codigo_asegurado,\r\n            ci: ci,\r\n            nombre: nombre,\r\n            ap_paterno: ap_paterno,\r\n            ap_materno: ap_materno,\r\n            parentesco: parentesco,\r\n            sexo: sexo,\r\n            fecha_nac: fecha_nac,\r\n            fecha_extincion: fecha_extincion,\r\n            direccion: direccion,\r\n            empleador: empleador,\r\n            foto: foto,\r\n            observaciones: observaciones\r\n        });\r\n    }\r\n});\r\n\r\n/*export const updateAsegPaciente = new ValidatedMethod({\r\n    name: 'pacasegurado.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        tipo_paciente: {type: String},\r\n        asegurado: {type: Boolean},\r\n        //codigo_aseg_ant: {type: String, optional: true },\r\n        codigo_asegurado: {type: String, optional: true },\r\n        ci: {type: String},\r\n        nombre: {type: String},\r\n        ap_paterno: {type: String},\r\n        ap_materno: {type: String},\r\n        sexo: {type: String},\r\n        fecha_nac: {type: String},\r\n        fecha_extincion: {type: String},\r\n        direccion: {type: String},\r\n        empleador: {type: String},\r\n        foto: {type: String, optional: true},\r\n        obs_fecha: {type: Date},\r\n        obs_titulo: {type: String},\r\n        obs_concepto: {type: String},\r\n        obs_propietario: {type: String}\r\n    }).validator(),\r\n    run ({\r\n        id,\r\n        tipo_paciente,\r\n        asegurado,\r\n        codigo_aseg_ant,\r\n        codigo_asegurado,\r\n        ci,\r\n        nombre,\r\n        ap_paterno,\r\n        ap_materno,\r\n        sexo,\r\n        fecha_nac,\r\n        fecha_extincion,\r\n        direccion,\r\n        empleador,\r\n        foto,\r\n        obs_fecha,\r\n        obs_titulo,\r\n        obs_concepto,\r\n        obs_propietario\r\n    }) {\r\n        return [\r\n            Pacientes.update({\r\n                _id: id\r\n            },{\r\n                $set:{\r\n                    tipo_paciente: tipo_paciente,\r\n                    asegurado: asegurado,\r\n                    codigo_asegurado: codigo_asegurado,\r\n                    ci: ci,\r\n                    nombre: nombre,\r\n                    ap_paterno: ap_paterno,\r\n                    ap_materno: ap_materno,\r\n                    sexo: sexo,\r\n                    fecha_nac: fecha_nac,\r\n                    fecha_extincion: fecha_extincion,\r\n                    direccion: direccion,\r\n                    empleador: empleador,\r\n                    foto: foto,\r\n                }\r\n            }),\r\n            Pacientes.update({\r\n                _id: id\r\n            },{\r\n                $push:{\r\n                    observaciones: {\r\n                        obs_fecha: obs_fecha,\r\n                        obs_titulo: obs_titulo,\r\n                        obs_concepto: obs_concepto,\r\n                        obs_propietario: obs_propietario\r\n                    }\r\n                }\r\n            })\r\n        ];\r\n    }\r\n});*/\r\n\r\nexport const updatePaciente = new ValidatedMethod({\r\n    name: 'asegurado.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        tipo_paciente: {type: String},\r\n        asegurado: {type: Boolean},\r\n        codigo_aseg_ant: {type: String, optional: true },\r\n        codigo_asegurado: {type: String, optional: true },\r\n        ci: {type: String},\r\n        nombre: {type: String},\r\n        ap_paterno: {type: String},\r\n        ap_materno: {type: String},\r\n        sexo: {type: String},\r\n        fecha_nac: {type: String},\r\n        fecha_extincion: {type: String},\r\n        direccion: {type: String},\r\n        empleador: {type: String},\r\n        foto: {type: String, optional: true},\r\n        parentesco: {type: String, optional: true},\r\n    }).validator(),\r\n    run ({\r\n        id,\r\n        tipo_paciente,\r\n        asegurado,\r\n        codigo_aseg_ant,\r\n        codigo_asegurado,\r\n        ci,\r\n        nombre,\r\n        ap_paterno,\r\n        ap_materno,\r\n        sexo,\r\n        fecha_nac,\r\n        fecha_extincion,\r\n        direccion,\r\n        empleador,\r\n        foto,\r\n        parentesco,\r\n    }) {\r\n        return [\r\n            Pacientes.update({\r\n                _id: id\r\n            },{\r\n                $set:{\r\n                    tipo_paciente: tipo_paciente,\r\n                    asegurado: asegurado,\r\n                    codigo_asegurado: codigo_asegurado,\r\n                    ci: ci,\r\n                    nombre: nombre,\r\n                    ap_paterno: ap_paterno,\r\n                    ap_materno: ap_materno,\r\n                    sexo: sexo,\r\n                    fecha_nac: fecha_nac,\r\n                    fecha_extincion: fecha_extincion,\r\n                    direccion: direccion,\r\n                    empleador: empleador,\r\n                    foto: foto,\r\n                    parentesco: parentesco,\r\n                }\r\n            }),\r\n            Pacientes.update({\r\n                codigo_asegurado: codigo_aseg_ant\r\n            },{\r\n                $set:{\r\n                    codigo_asegurado: codigo_asegurado,\r\n                    direccion: direccion,\r\n                    empleador: empleador,\r\n                }\r\n            },\r\n            {\r\n                multi:true\r\n            })\r\n        ];\r\n    }\r\n});\r\n\r\nexport const updatePartAseg = new ValidatedMethod({\r\n    name: 'partaseg.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        tipo_paciente: {type: String},\r\n        asegurado: {type: Boolean},\r\n        //codigo_aseg_ant: {type: String, optional: true },\r\n        codigo_asegurado: {type: String, optional: true },\r\n        ci: {type: String},\r\n        nombre: {type: String},\r\n        ap_paterno: {type: String},\r\n        ap_materno: {type: String},\r\n        sexo: {type: String},\r\n        fecha_nac: {type: String},\r\n        fecha_extincion: {type: String},\r\n        direccion: {type: String},\r\n        empleador: {type: String},\r\n        foto: {type: String, optional: true},\r\n        parentesco: {type: String, optional: true},\r\n        obs_fecha: {type: Date},\r\n        obs_titulo: {type: String},\r\n        obs_concepto: {type: String},\r\n        obs_propietario: {type: String}\r\n    }).validator(),\r\n    run ({\r\n        id,\r\n        tipo_paciente,\r\n        asegurado,\r\n        codigo_aseg_ant,\r\n        codigo_asegurado,\r\n        ci,\r\n        nombre,\r\n        ap_paterno,\r\n        ap_materno,\r\n        sexo,\r\n        fecha_nac,\r\n        fecha_extincion,\r\n        direccion,\r\n        empleador,\r\n        foto,\r\n        parentesco,\r\n        obs_fecha,\r\n        obs_titulo,\r\n        obs_concepto,\r\n        obs_propietario\r\n    }) {\r\n        return [\r\n            Pacientes.update({\r\n                _id: id\r\n            },{\r\n                $set:{\r\n                    tipo_paciente: tipo_paciente,\r\n                    asegurado: asegurado,\r\n                    codigo_asegurado: codigo_asegurado,\r\n                    ci: ci,\r\n                    nombre: nombre,\r\n                    ap_paterno: ap_paterno,\r\n                    ap_materno: ap_materno,\r\n                    sexo: sexo,\r\n                    fecha_nac: fecha_nac,\r\n                    fecha_extincion: fecha_extincion,\r\n                    direccion: direccion,\r\n                    empleador: empleador,\r\n                    foto: foto,\r\n                    parentesco,\r\n                }\r\n            }),\r\n            Pacientes.update({\r\n                _id: id\r\n            },{\r\n                $push:{\r\n                    observaciones: {\r\n                        obs_fecha: obs_fecha,\r\n                        obs_titulo: obs_titulo,\r\n                        obs_concepto: obs_concepto,\r\n                        obs_propietario: obs_propietario\r\n                    }\r\n                }\r\n            })\r\n        ];\r\n    }\r\n});\r\n\r\nexport const removeAsegDep = new ValidatedMethod({\r\n    name: 'asegdep.remove',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        obs_fecha: {type: Date},\r\n        obs_titulo: {type: String},\r\n        obs_concepto: {type: String},\r\n        obs_propietario: {type: String}\r\n    }).validator(),\r\n    run ({\r\n        id,\r\n        obs_fecha,\r\n        obs_titulo,\r\n        obs_concepto,\r\n        obs_propietario\r\n    }) {\r\n        return [\r\n            Pacientes.update({\r\n                _id: id\r\n            },{\r\n                $set:{\r\n                    tipo_paciente: 'Particular',\r\n                    asegurado: false,\r\n                    codigo_asegurado: '',\r\n                    parentesco: '',\r\n                    empleador: '',\r\n                }\r\n            }),\r\n            Pacientes.update({\r\n                _id: id\r\n            },{\r\n                $push:{\r\n                    observaciones: {\r\n                        obs_fecha: obs_fecha,\r\n                        obs_titulo: obs_titulo,\r\n                        obs_concepto: obs_concepto,\r\n                        obs_propietario: obs_propietario\r\n                    }\r\n                }\r\n            })\r\n        ]\r\n    }\r\n});\r\n/*,{\r\n    $unset:{\r\n        codigo_asegurado: \"\"\r\n    }\r\n}*/\r\nexport const removeAsegTit = new ValidatedMethod({\r\n    name: 'asegtit.remove',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        codigo_asegurado: {type: String},\r\n        obs_fecha: {type: Date},\r\n        obs_titulo: {type: String},\r\n        obs_concepto: {type: String},\r\n        obs_propietario: {type: String}\r\n    }).validator(),\r\n    run ({\r\n        id,\r\n        codigo_asegurado,\r\n        obs_fecha,\r\n        obs_titulo,\r\n        obs_concepto,\r\n        obs_propietario\r\n    }) {\r\n        return [\r\n            Pacientes.update({\r\n                _id: id\r\n            },{\r\n                $set:{\r\n                    tipo_paciente: 'Particular',\r\n                    asegurado: false,\r\n                    codigo_asegurado: '',\r\n                    empleador: '',\r\n                }\r\n            }),\r\n            Pacientes.update({\r\n                _id: id\r\n            },{\r\n                $push:{\r\n                    observaciones: {\r\n                        obs_fecha: obs_fecha,\r\n                        obs_titulo: obs_titulo,\r\n                        obs_concepto: obs_concepto,\r\n                        obs_propietario: obs_propietario\r\n                    }\r\n                }\r\n            }),\r\n            Pacientes.update({\r\n                codigo_asegurado: codigo_asegurado\r\n            },{\r\n                $push:{\r\n                    observaciones: {\r\n                        obs_fecha: obs_fecha,\r\n                        obs_titulo: obs_titulo,\r\n                        obs_concepto: \"'Desafiliado' porque el asegurado titular fue 'Desafiliado'\",\r\n                        obs_propietario: obs_propietario\r\n                    }\r\n                }\r\n            },{\r\n                multi:true\r\n            }),\r\n            Pacientes.update({\r\n                codigo_asegurado: codigo_asegurado\r\n            },{\r\n                $set:{\r\n                    tipo_paciente: 'Particular',\r\n                    asegurado: false,\r\n                    codigo_asegurado: '',\r\n                    empleador: '',\r\n                }\r\n            },{\r\n                multi:true\r\n            })\r\n        ]\r\n    }\r\n});\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { ValidateMethod } from 'meteor/mdg:validated-method';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\nimport { PlanCuentas } from './collections.js';\r\n\r\nexport const insertPlanCuenta = new ValidatedMethod({\r\n    name: 'plancuenta.insert',\r\n    validate: new SimpleSchema({\r\n        codigo_cuenta: {type: String},\r\n        codigo_superior: {type: String, optional: true},\r\n        nombre_cuenta: {type: String},\r\n        tipo: {type: String},\r\n        nivel: {type: String},\r\n        cuenta_mayor: {type: String},\r\n        libro_mayor: {type: Boolean},\r\n    }).validator(),\r\n    run({\r\n        codigo_cuenta,\r\n        codigo_superior,\r\n        nombre_cuenta,\r\n        tipo,\r\n        nivel,\r\n        cuenta_mayor,\r\n        libro_mayor,\r\n    }){\r\n        return PlanCuentas.insert({\r\n            codigo_cuenta: codigo_cuenta,\r\n            codigo_superior: codigo_superior,\r\n            nombre_cuenta: nombre_cuenta,\r\n            tipo: tipo,\r\n            nivel: nivel,\r\n            cuenta_mayor: cuenta_mayor,\r\n            libro_mayor: libro_mayor,\r\n        });\r\n    }\r\n});\r\n\r\nexport const removePlanCuenta = new ValidatedMethod({\r\n    name: 'plancuenta.remove',\r\n    validate: new SimpleSchema({\r\n        codigo_cuenta: {type: String}\r\n    }).validator(),\r\n    run({\r\n        codigo_cuenta\r\n    }){\r\n        return PlanCuentas.remove({\r\n            codigo_cuenta: codigo_cuenta\r\n        });\r\n    }\r\n});\r\n\r\nexport const updatePlanCuenta = new ValidatedMethod({\r\n    name: 'plancuenta.update',\r\n    validate: new SimpleSchema({\r\n        codigo_cuenta: {type: String},\r\n        nombre_cuenta: {type: String},\r\n        tipo: {type: String},\r\n        nivel: {type: String},\r\n        cuenta_mayor: {type: String},\r\n        libro_mayor: {type: Boolean},\r\n    }).validator(),\r\n    run({\r\n        codigo_cuenta,\r\n        nombre_cuenta,\r\n        tipo,\r\n        nivel,\r\n        cuenta_mayor,\r\n        libro_mayor\r\n    }){\r\n        return PlanCuentas.update({\r\n            codigo_cuenta: codigo_cuenta\r\n        },{\r\n            $set:{\r\n                nombre_cuenta: nombre_cuenta,\r\n                tipo: tipo,\r\n                nivel: nivel,\r\n                cuenta_mayor: cuenta_mayor,\r\n                libro_mayor: libro_mayor\r\n            }\r\n        });\r\n    }\r\n});\r\n","import { Meteor } from 'meteor/meteor';\nimport { ValidateMethod } from 'meteor/mdg:validated-method';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\nexport const insertRoles = new ValidatedMethod({\n    name: 'roles.insert',\n    validate: new SimpleSchema({\n        userId: {type: String},\n        roles: {type: [String]}\n    }).validator(),\n    run({\n        userId,\n        roles\n    }){\n        /*console.log('Hola');\n        console.log(roles);*/\n        return Roles.addUsersToRoles(userId, roles);\n        //return Roles.setUserRoles(userId, roles);\n    }\n});\n\nexport const editRoles = new ValidatedMethod({\n    name: 'roles.edit',\n    validate: new SimpleSchema({\n        userId: {type: String},\n        roles: {type: [String]}\n    }).validator(),\n    run({\n        userId,\n        roles\n    }){\n        //console.log('Hola');\n        //console.log(roles);\n        //return Roles.addUsersToRoles(userId, roles);\n        return Roles.setUserRoles(userId, roles);\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { ValidateMethod } from 'meteor/mdg:validated-method';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\nimport { Salas, Camas, Servicios } from './collections.js';\n\nexport const insertSala = new ValidatedMethod({\n    name: 'sala.insert',\n    validate: new SimpleSchema({\n        imagen: {type: String},\n        nombre_sala: {type: String},\n        tipo_sala: {type: String, optional: true},\n        estado: {type: Boolean},\n    }).validator(),\n    run({\n        imagen,\n        nombre_sala,\n        tipo_sala,\n        estado,\n    }){\n        return Salas.insert({\n            imagen: imagen,\n            nombre_sala: nombre_sala,\n            tipo_sala: tipo_sala,\n            estado: estado,\n        });\n    }\n});\n\nexport const updateSala = new ValidatedMethod({\n    name: 'sala.update',\n    validate: new SimpleSchema({\n        id: {type: String},\n        imagen: {type: String},\n        nombre_sala: {type: String},\n        tipo_sala: {type: String, optional: true},\n        estado: {type: Boolean},\n\n    }).validator(),\n    run({\n        id,\n        imagen,\n        nombre_sala,\n        tipo_sala,\n        estado,\n    }){\n        return Salas.update({\n            _id: id\n        },{\n            $set: {\n                imagen: imagen,\n                nombre_sala: nombre_sala,\n                tipo_sala: tipo_sala,\n                estado: estado,\n            }\n        });\n    }\n});\n\nexport const removeSala = new ValidatedMethod({\n    name: 'sala.remove',\n    validate: new SimpleSchema({\n        id: {type: String},\n    }).validator(),\n    run({\n        id,\n    }){\n        return [\n            Salas.remove({\n                _id: id\n            }),\n            Camas.remove({\n                id_sala: id\n            })\n        ];\n    }\n});\n\n// CAMAS\n\nexport const insertCama = new ValidatedMethod({\n    name: 'cama.insert',\n    validate: new SimpleSchema({\n        id_sala: {type: String},\n        nro_cama: {type: Number},\n        //estado: {type: Boolean},\n        ocupado: {type: Boolean}\n    }).validator(),\n    run({\n        id_sala,\n        nro_cama,\n        //estado,\n        ocupado\n    }){\n        return Camas.insert({\n            id_sala: id_sala,\n            nro_cama: nro_cama,\n            //estado: estado,\n            ocupado: ocupado\n        });\n    }\n});\n\nexport const updateCama = new ValidatedMethod({\n    name: 'cama.update',\n    validate: new SimpleSchema({\n        id: {type: String},\n        ocupado: {type: Boolean}\n    }).validator(),\n    run({\n        id,\n        ocupado\n    }){\n        return Camas.update({\n            _id: id,\n        },{\n            $set: {\n                ocupado: ocupado,\n            }\n        });\n    }\n});\n\nexport const removeCama = new ValidatedMethod({\n    name: 'cama.remove',\n    validate: new SimpleSchema({\n        id: {type: String},\n    }).validator(),\n    run({\n        id,\n    }){\n        return Camas.remove({\n            _id: id,\n        });\n    }\n});\n\n\n//SERVICIOS\nexport const insertServicio = new ValidatedMethod({\n    name: 'servicio.insert',\n    validate: new SimpleSchema({\n        servicio: {type: String},\n    }).validator(),\n    run({\n        servicio\n    }){\n        return Servicios.insert({\n            servicio: servicio,\n        });\n    }\n});\n\nexport const updateServicio = new ValidatedMethod({\n    name: 'servicio.update',\n    validate: new SimpleSchema({\n        id: {type: String},\n        servicio: {type: String}\n    }).validator(),\n    run({\n        id,\n        servicio\n    }){\n        return Servicios.update({\n            _id: id,\n        },{\n            $set: {\n                servicio: servicio,\n            }\n        });\n    }\n});\n\nexport const removeServicio = new ValidatedMethod({\n    name: 'Servicio.remove',\n    validate: new SimpleSchema({\n        id: {type: String},\n    }).validator(),\n    run({\n        id,\n    }){\n        return Servicios.remove({\n            _id: id,\n        });\n    }\n});\n","import { Meteor } from 'meteor/meteor';\r\nimport { ValidateMethod } from 'meteor/mdg:validated-method';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\nimport { Turnos } from './collections.js';\r\n\r\nexport const insertTurno = new ValidatedMethod({\r\n    name: 'turno.insert',\r\n    validate: new SimpleSchema({\r\n        nombre_turno: {type: String},\r\n        //a침o: {type: String},\r\n        //mes: {type: String},\r\n        codigo_turno: {type: String},\r\n        imagen_turno: {type: String},\r\n        precio_aseg: {type: String},\r\n        precio_part: {type: String},\r\n        medicos: {type: [Object]},\r\n        'medicos.$.nro_orden': {type:String},\r\n        'medicos.$.medico': {type:String}\r\n    }).validator (),\r\n    run ({ nombre_turno, /*a침o, mes,*/ codigo_turno, imagen_turno, precio_aseg, precio_part, medicos }) {\r\n        return Turnos.insert({\r\n            nombre_turno: nombre_turno,\r\n            //a침o: a침o,\r\n            //mes: mes,\r\n            codigo_turno: codigo_turno,\r\n            tipo: 'Turno',\r\n            imagen_turno: imagen_turno,\r\n            precio_aseg: precio_aseg,\r\n            precio_part: precio_part,\r\n            medicos: medicos\r\n        });\r\n    }\r\n});\r\nexport const updateTurno = new ValidatedMethod({\r\n    name: 'turno.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        nombre_turno: {type: String},\r\n        //a침o: {type: String},\r\n        //mes: {type: String},\r\n        codigo_turno: {type: String},\r\n        imagen_turno: {type: String},\r\n        precio_aseg: {type: String},\r\n        precio_part: {type: String},\r\n        medicos: {type: [Object]},\r\n        'medicos.$.nro_orden': {type:String},\r\n        'medicos.$.medico': {type:String}\r\n    }).validator (),\r\n    run ({ id, nombre_turno, /*a침o, mes,*/codigo_turno, imagen_turno, precio_aseg, precio_part, medicos }) {\r\n        return Turnos.update({\r\n            _id: id,\r\n        },{\r\n            $set:{\r\n                nombre_turno: nombre_turno,\r\n                //a침o: a침o,\r\n                //mes: mes,\r\n                codigo_turno: codigo_turno,\r\n                tipo: 'Turno',\r\n                imagen_turno: imagen_turno,\r\n                precio_aseg: precio_aseg,\r\n                precio_part: precio_part,\r\n                medicos: medicos\r\n            }\r\n        });\r\n    }\r\n});\r\nexport const removeTurno = new ValidatedMethod({\r\n    name: 'turno.remove',\r\n    validate: new SimpleSchema({\r\n        id: {type: String}\r\n    }).validator (),\r\n    run ({id}) {\r\n        return Turnos.remove({_id: id});\r\n    }\r\n});\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { ValidateMethod } from 'meteor/mdg:validated-method';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\nimport { Usuarios, ClaveRegistro } from './collections.js';\r\n\r\nexport const insertUsuario = new ValidatedMethod({\r\n    name: 'usuario.insert',\r\n    validate: new SimpleSchema({\r\n        subsistema: {type: String},\r\n        //cargo: {type: String},\r\n        ci: {type: String},\r\n        nombre: {type: String},\r\n        ap_paterno: {type: String},\r\n        ap_materno: {type: String},\r\n        sexo: {type: String},\r\n        fecha_nacimiento: {type: String},\r\n        direccion: {type: String},\r\n        celular: {type: String},\r\n        telf_referencia: {type: String},\r\n        avatar: {type: String},\r\n        userId: {type: String, optional: true},\r\n        user: {type: String, optional: true},\r\n        password: {type: String, optional: true},\r\n\r\n        propietario_reg: {type: String},\r\n        fecha_registro: {type:Date},\r\n        eliminado: {type: Boolean},\r\n        propietario_elim: {type: String},\r\n        fecha_elim: { type: Date, optional: true},\r\n        roles: {type: [String]}\r\n\r\n    }).validator(),\r\n    run({subsistema, ci, nombre, ap_paterno, ap_materno, sexo, fecha_nacimiento, direccion, celular, telf_referencia, avatar, userId, user, password, propietario_reg, fecha_registro, eliminado, propietario_elim, fecha_elim, roles}){\r\n        return Usuarios.insert({\r\n            subsistema: subsistema,\r\n            //cargo: cargo,\r\n            ci: ci,\r\n            nombre: nombre,\r\n            ap_paterno: ap_paterno,\r\n            ap_materno: ap_materno,\r\n            sexo: sexo,\r\n            fecha_nacimiento: fecha_nacimiento,\r\n            direccion: direccion,\r\n            celular: celular,\r\n            telf_referencia: telf_referencia,\r\n            avatar: avatar,\r\n            estado: true,\r\n            userId: userId,\r\n            user: user,\r\n            password: password,\r\n            propietario_reg: propietario_reg,\r\n            fecha_registro: fecha_registro,\r\n            eliminado: eliminado,\r\n            propietario_elim: propietario_elim,\r\n            fecha_elim: fecha_elim,\r\n            roles: roles\r\n        });\r\n    }\r\n});\r\n\r\nexport const claveReg = new ValidatedMethod({\r\n    name: 'clave.reg',\r\n    validate: new SimpleSchema({\r\n        ci: {type: String},\r\n        codigoReg:{type: String}\r\n    }).validator(),\r\n    run({ci, codigoReg}){\r\n        return ClaveRegistro.insert({ci: ci, codigoReg: codigoReg});\r\n    }\r\n});\r\n\r\nexport const updateEstadoUs = new ValidatedMethod({\r\n    name: 'update.estadoUs',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        estado: {type: Boolean}\r\n    }).validator(),\r\n    run({id, estado}){\r\n        return Usuarios.update({\r\n            _id:id\r\n        },{\r\n            $set:{\r\n                estado: estado\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateRolesUs = new ValidatedMethod({\r\n    name: 'update.rolesUs',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        roles: {type: [String]}\r\n    }).validator(),\r\n    run({id, roles}){\r\n        return Usuarios.update({\r\n            _id:id\r\n        },{\r\n            $set:{\r\n                roles: roles\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateUsuario = new ValidatedMethod({\r\n    name: 'usuarios.update',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        subsistema: {type: String},\r\n        //cargo: {type: String},\r\n        ci: {type: String},\r\n        nombre: {type: String},\r\n        ap_paterno: {type: String},\r\n        ap_materno: {type: String},\r\n        sexo: {type: String},\r\n        fecha_nacimiento: {type: String},\r\n        direccion: {type: String},\r\n        celular: {type: String},\r\n        telf_referencia: {type: String},\r\n        //estado: {type: Boolean},\r\n        //avatar: {type: String}\r\n    }).validator(),\r\n    run({\r\n        id,\r\n        subsistema,\r\n        //cargo,\r\n        ci,\r\n        nombre,\r\n        ap_paterno,\r\n        ap_materno,\r\n        sexo,\r\n        fecha_nacimiento,\r\n        direccion,\r\n        celular,\r\n        telf_referencia,\r\n        //estado,\r\n        //avatar\r\n    }){\r\n        return Usuarios.update({\r\n            _id: id\r\n        },{\r\n            $set: {\r\n                subsistema: subsistema,\r\n                //cargo: cargo,\r\n                ci: ci,\r\n                nombre: nombre,\r\n                ap_paterno: ap_paterno,\r\n                ap_materno: ap_materno,\r\n                sexo: sexo,\r\n                fecha_nacimiento: fecha_nacimiento,\r\n                direccion: direccion,\r\n                celular: celular,\r\n                telf_referencia: telf_referencia,\r\n                //estado: estado,\r\n                //avatar: avatar\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nexport const updateRemoveUs = new ValidatedMethod({\r\n    name: 'update.removeUs',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        eliminado: {type: Boolean},\r\n        propietario_elim: {type: String},\r\n        fecha_elim: {type: Date, optional: true},\r\n        estado: {type: Boolean}\r\n    }).validator(),\r\n    run({id, eliminado, propietario_elim, fecha_elim, estado}){\r\n        return Usuarios.update({\r\n            _id:id\r\n        },{\r\n            $set:{\r\n                eliminado: eliminado,\r\n                propietario_elim: propietario_elim,\r\n                fecha_elim: fecha_elim,\r\n                estado: estado\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nexport const removeForeverUs = new ValidatedMethod({\r\n    name: 'remove.forever.us',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        ci: {type: String}\r\n    }).validator(),\r\n    run({id, ci}){\r\n        return [\r\n            Usuarios.remove({_id: id}),\r\n            ClaveRegistro.remove({ci:ci})\r\n        ]\r\n    }\r\n});\r\n\r\nexport const updateCargoUs = new ValidatedMethod({\r\n    name: 'update.cargoUs',\r\n    validate: new SimpleSchema({\r\n        id: {type: String},\r\n        //cargo: {type: String}\r\n    }).validator(),\r\n    run({id, cargo}){\r\n        return Usuarios.update({\r\n                _id: id\r\n            },{\r\n                $set:{\r\n                    cargo: cargo\r\n                }\r\n            });\r\n    }\r\n});\r\n\r\nexport const updateAvatarUs = new ValidatedMethod({\r\n    name: 'update.avatarUs',\r\n    validate: new SimpleSchema({\r\n        userId: {type: String},\r\n        avatar: {type: String}\r\n    }).validator(),\r\n    run({userId, avatar}){\r\n        return Usuarios.update({\r\n                userId: userId\r\n            },{\r\n                $set:{\r\n                    avatar: avatar\r\n                }\r\n            });\r\n    }\r\n});\r\n\r\nexport const updateUserId= new ValidatedMethod({\r\n    name:'update.userId',\r\n    validate:new SimpleSchema({\r\n        ci:{type:String},\r\n        userId:{type:String},\r\n        user: {type: String},\r\n        password: {type: String}\r\n    }).validator(),\r\n    run({ci,userId, user, password}){\r\n        return [\r\n            Usuarios.update({\r\n                ci:ci\r\n            },{\r\n                $set:{\r\n                    userId:userId,\r\n                    user: user,\r\n                    password: password\r\n                }\r\n            }),\r\n            //ClaveRegistro.remove({ci:ci})\r\n        ];\r\n    }\r\n});\r\n","import { Meteor } from 'meteor/meteor';\nimport pubs from '../imports/api/collections/server/publications.js';\nimport { Images } from '../imports/api/collections/collections.js';\n//ADMINISTRADOR\n    //USUARIOS\n    import { insertUsuario, claveReg, updateEstadoUs, updateUsuario, updateRemoveUs, removeForeverUs, updateCargoUs, updateAvatarUs, updateUserId, updateRolesUs } from '../imports/api/collections/methods_users.js';\n    //CARGOS\n    import { insertCargo, updateCargo, updateCargoNroUs, removeCargo } from '../imports/api/collections/methods_cargos.js';\n    //MEDICOS\n    import { insertMedico, updateMedico, updateMedicoUs, removeMedico, updateMedicoEsp } from '../imports/api/collections/methods_medicos.js';\n    //CONSULTORIOS\n    import { insertConsultorio, removeConsultorio, updateConsultorio, updateActivConsultorio } from '../imports/api/collections/methods_consultorio.js';\n    //EMPRESAS\n    import { insertEmpresa, updateEmpresa, removeEmpresa } from '../imports/api/collections/methods_empresas.js';\n    //TURNOS\n    import { insertTurno, updateTurno, removeTurno } from '../imports/api/collections/methods_turnos';\n    //SALAS\n    import { insertSala, updateSala, removeSala, insertCama, updateCama, removeCama, insertServicio, updateServicio, removeServicio } from '../imports/api/collections/methods_salas';\n\n\n//FICHAJE\n    //PACIENTES\n    import { insertPaciente, updatePaciente, updatePartAseg, removeAsegDep, removeAsegTit } from '../imports/api/collections/methods_pacientes.js';\n    //FICHAS\n    import { insertFicha, ventaFicha, updateEstadoFicha, updateEstadoFichaMed, updateElimFicha, insertReporteFicha, updateReporteFicha, updateMedFicha, insertFichaFarmacia, updateElimFichaFarm, updateFichaFarmacia, updateEstadoFichaEnf, updateFinConsFichaEnf, updateHistLlenaFichaMed, updatePrecioFichaEnf, insertFichaInternacion, removeFichaInternacion, updatePrecioFichaInternacion, updateReporteFichaInternacion, insertDetalleFicha, updatePrecioDetalleFicha, removeDetalleFicha, removeAllDetalleFicha } from '../imports/api/collections/methods_fichas.js';\n\n\n//CONTABILIDAD\n    //PLAN DE CUENTAS\n    import { insertPlanCuenta, removePlanCuenta, updatePlanCuenta } from '../imports/api/collections/methods_plan_cuentas.js';\n    //COMPROBANTES\n    import { insertComprobante, insertEstadoConta, updateEstadoConta } from '../imports/api/collections/methods_comprobantes.js';\n    //MAYORES\n    import { insertMayor, updateMayor, updateTotalesMayor } from '../imports/api/collections/methods_mayores.js';\n    //ESTADOS FINANCIEROS\n    import { EstadosFinancieros, updateEstadoFinanciero, removeEstadoFinanciero } from '../imports/api/collections/methods_estados_financieros.js';\n\n//MEDICO\n    import { createHistorial, updateHistorial, insertConsulta, insertInternacionPaciente, insertReceta, insertDiagnostico, insertInternacion, insertEvolucionPaciente, insertIndicacionMedica, insertEpicrisisMedica, insertCirugiaMedica, insertQuirofano, updateEditQuirofano, updateQuirofano, removeQuirofano, updateAltaMedicaInternacion, updateAdmisionInternacion, insertConsultaEnfermeria, updateAltaEnfermeriaInternacion, insertIndicacionEnfermeria, updatePagoEnfermeriaInternacion, insertSignosVitales, insertPartos, updateReportadoInternacion } from '../imports/api/collections/methods_historiales.js';\n\n\n//FARMACIA\n    import { insertMedicamento, updateMedicamCant, updateMedicamento, removeMedicamento, insertCompraMedicamento, insertVentaMedicamento, updateStockMedicam, insertReporteFarmacia, updateReporteFarmacia, devolucionMedicamFarmacia, devolucionVentaFarmacia, insertCliente, updateCliente, updateClienteVenta, insertLinea, updateLinea, removeLinea } from '../imports/api/collections/methods_medicamentos.js';\n\n//ROLES\n    import { insertRoles, editRoles } from '../imports/api/collections/methods_roles.js';\n\npubs();\n\n\n/*\nvar ip = \"0.0.0.0\";\nMeteor.onConnection(function(conn) {\n    console.log(Usuarios.find({}));\n    console.log(conn.clientAddress);\n    console.log(conn.httpHeaders.host);\n});*/\n"]}